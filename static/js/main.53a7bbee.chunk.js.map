{"version":3,"sources":["containers/User/styles.module.scss","components/Post/styles.module.scss","containers/Threads/styles.module.scss","containers/Forum/styles.module.scss","containers/NewThread/styles.module.scss","components/Body/index.tsx","utils/useResponsive.ts","components/X/index.tsx","utils/parsers.ts","components/Img/index.tsx","components/ParsedText.tsx","containers/Nav/Alerts.tsx","utils/jwt.ts","containers/Nav/User.tsx","containers/Nav/Dropdown.tsx","containers/Nav/index.tsx","components/DisplayError/index.tsx","components/Loading/index.tsx","containers/Login/index.tsx","containers/Signup/index.tsx","components/Post/index.tsx","containers/Posts/index.tsx","components/Ad/index.tsx","containers/AdContainer/index.tsx","components/TextInput/index.tsx","utils/profanityFilter.ts","containers/Threads/index.tsx","containers/NewThread/index.tsx","containers/Profile/index.tsx","containers/User/index.tsx","containers/Messages/SidePanel.tsx","containers/Messages/MessagePanel.tsx","containers/Messages/NewMessagePanel.tsx","containers/Messages/index.tsx","containers/Forum/index.tsx","containers/Stats/index.tsx","App.tsx","index.tsx","containers/Signup/styles.module.scss","components/TextInput/styles.module.scss","containers/Profile/styles.module.scss","containers/Login/styles.module.scss","containers/Nav/styles.module.scss","components/Body/styles.module.css","containers/Posts/styles.module.scss","components/Ad/styles.module.scss","containers/AdContainer/styles.module.scss","containers/Messages/styles.module.scss","components/X/styles.module.scss","components/Img/styles.module.scss","components/DisplayError/styles.module.scss"],"names":["module","exports","header","profile","intro","memberSince","sendMessage","content","left","right","avatar","postContainer","recentPosts","infoSection","uuid","post","threadLink","username","totalPosts","main","panel","panelContainer","userInfo","footer","postedAt","threadTitle","signup","disabled","back","addPost","adContainer","ad","threadContainer","startThread","quickLinks","info","threadPost","postLink","forum","input","sectionTitle","label","Width","_ref","children","props","Object","objectWithoutProperties","react","assign","className","styles","width","Body","_ref2","body","Body_Width","getSize","innerHeight","window","innerWidth","setEventListener","event","handler","addEventListener","removeEventListener","useResponsive","mobileWidth","_useState","useState","_useState2","slicedToArray","windowSize","setWindowSize","useEffect","isMobile","isDesktop","ringStyles","border","borderRadius","X","onClick","ring","x","style","externalLinkTest","imageTest","userTest","hashtagTest","postTest","threadTest","isUsername","str","cleanFragment","match","isHashtag","getUsernames","split","filter","map","f","getTags","JSON","stringify","hashtags","toLowerCase","usernames","fragment","test","replace","RegExp","Img","url","img","src","imgStyle","maxHeight","parseFragment","alt","isExternalLink","href","target","rel","userId","dirt","Link","to","concat","hashtag","isPostRef","postId","isThreadRef","threadId","combineFragments","fragments","length","arr","lastFragment","toConsumableArray","slice","addIndex","i","key","parser","paragraph","reduce","ParsedText","Alerts","alerts","readAlert","react_default","a","createElement","Fragment","alert","id","components_X","link","AlertDropdown","onEmptyClick","alertDropdown","Alerts_Alerts","noAlerts","AlertCircle","_ref3","unread","cx","circle","defineProperty","JWT","getMapping","stored","localStorage","getItem","parse","__currentUser__","jwt","get","mapping","getCurrentUser","getInnactiveUserList","keys","set","setItem","setCurrentUser","clearCurrentUser","logout","location","reload","UserDropdown","alternativeUsers","userDropdown","switchAccounts","switchUser","ELEMENT_ID","Dropdown","hide","hideDropdown","e","dropdown","document","getElementById","contains","currentUserQuery","readAlertMutation","NavBar","toggleDropdownVisible","currentUser","loading","title","links","Nav_SignedInMenu","Nav_SignedOutMenu","SignedInMenu","_useResponsive","maxWidth","overflow","user","backgroundImage","avatarUrl","Alerts_AlertCircle","SignedOutMenu","Nav","dropdownState","setDropdownState","_useQuery","useQuery","query","_useQuery2","_useQuery2$","data","fetching","_useMutation","useMutation","_useMutation2","executeReadAlert","history","listen","container","Nav_NavBar","dropdownPosition","User_UserDropdown","Alerts_AlertDropdown","alertId","DisplayError","error","Loading","dots","setDots","interval","setInterval","clearInterval","loginMutation","Login","setUsername","_useState3","_useState4","password","setPassword","_useMutation2$","executeLogin","login","jwtToken","card","components_DisplayError","components_Loading","name","placeholder","value","onChange","type","submitButton","preventDefault","signupMutation","Signup","_useState5","_useState6","passwordConfirm","setPasswordConfirm","_useState7","_useState8","errorText","setErrorText","executeSignup","displayErrorText","message","includes","inputs","Post","author","postStats","totalCount","Date","createdAt","toISOString","thread","Posts","variables","components_Post","Ad","AdContainer","n","adList","sampleSize","ads","components_Ad","defaultPlaceholder","TextInput","buttonContent","inputStyle","onSubmit","setContent","submit","inner","contentInput","_onChange","_x","apply","this","arguments","toString","onKeyDown","keyCode","metaKey","profanityFilter","each","motherfucker","fuck","shit"," dick ","bitch","cunt","cocksuck","cock","nigger","nigga"," fag ","faggot","tranny"," god ","goddamn","replaceTo","replaceFrom","AddPost","executeCreatePost","components_TextInput","tags","Threads","executeQuery","isError","useCallback","requestPolicy","isLoading","isData","posts","showAd","containers_AdContainer","Threads_AddPost","NewThread","setTitle","response","executeCreateThread","createThread","objectSpread","newThread","height","userProps","updateUserMutation","Profile","ProfileContent","goto","push","Redirect","validDate","dateStr","validEmail","emailStr","setAvatarUrl","email","setEmail","gender","setGender","birthday","setBirthday","_useState9","bio","_useState10","setBio","_useState11","job","_useState12","setJob","_useState13","interests","_useState14","_useState15","websites","_useState16","setWebsites","_useState17","media","_useState18","setMedia","_useState19","religion","_useState20","setReligion","_useState21","politics","_useState22","setPolitics","_useState23","_useState24","submitted","setSubmitted","executeUpdateUser","bdayError","emailError","updateUser","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","buttonContainer","inputSection","InfoSection","User","margin","textAlign","date","toLocaleString","weekday","year","month","day","hour","minute","second","User_InfoSection","messagesDataQuery","collectMessages","messages","_createdAt","has","uniqueSortedUsers","messageData","sent","received","Map","values","Array","from","entries","orderBy","reverse","m","SidePanel","messageNames","sidePanelContainer","sidePanel","emptyUsers","requestedUserQuery","createMessageMutation","MessagePanel","$sentMessages","useRef","messageToSend","setMessageToSend","executeCreateMessage","current","scrollTop","scrollHeight","collectedMessages","requestedUser","sentMessages","sender","messagePanel","ref","sendBox","onKeyPress","toUsername","NewMessagePanel","newUser","setNewUser","then","newMessageBox","Messages","newMessage","setNewMessage","messagesSection","mobileContainer","desktopContainer","ThreadPost","userName","substring","latestPostTime","Forum","threads","Forum_ThreadPost","statsQuery","Stats","stats","userStatsList","stat","postCount","App","prevProps","scrollTo","Route","path","component","components_Body","Switch","exact","render","containers_Threads","Number","params","containers_Messages","_ref4","containers_Posts","_ref5","containers_User","fontSize","padding","React","withRouter","client","createClient","fetchOptions","headers","Authorization","hours","getHours","ReactDOM","urql_es","BrowserRouter","basename","src_App","Unread","Rotate"],"mappings":"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","file":"static/js/main.53a7bbee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2wLxh\",\"profile\":\"styles_profile__31rzl\",\"intro\":\"styles_intro__1X3Y3\",\"memberSince\":\"styles_memberSince__1jhAK\",\"sendMessage\":\"styles_sendMessage__3284j\",\"content\":\"styles_content__1_9jW\",\"left\":\"styles_left__vhBr7\",\"right\":\"styles_right__1-xIl\",\"avatar\":\"styles_avatar__1sUtC\",\"postContainer\":\"styles_postContainer__35feo\",\"recentPosts\":\"styles_recentPosts__1aAFm\",\"infoSection\":\"styles_infoSection__2k3k7\",\"uuid\":\"styles_uuid__36WGZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"styles_post__2wjTj\",\"avatar\":\"styles_avatar__2GJc8\",\"header\":\"styles_header__19BhD\",\"threadLink\":\"styles_threadLink__3x7tb\",\"username\":\"styles_username__2fJ1r\",\"totalPosts\":\"styles_totalPosts__1YOIB\",\"main\":\"styles_main__TKFmC\",\"panel\":\"styles_panel__3ULdb\",\"panelContainer\":\"styles_panelContainer__2nRTc\",\"userInfo\":\"styles_userInfo__3SK-L\",\"content\":\"styles_content__2Ru5-\",\"footer\":\"styles_footer__dMb2p\",\"postedAt\":\"styles_postedAt__9cLJi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"threadTitle\":\"styles_threadTitle__nzF4M\",\"signup\":\"styles_signup__2AxnY\",\"disabled\":\"styles_disabled__1TmJj\",\"left\":\"styles_left__1P-Yx\",\"back\":\"styles_back__2jFxT\",\"threadLink\":\"styles_threadLink__1hkCr\",\"addPost\":\"styles_addPost__1-izz\",\"adContainer\":\"styles_adContainer__2ZcDv\",\"ad\":\"styles_ad__36g-4\",\"threadContainer\":\"styles_threadContainer__22gH-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__VUeZN\",\"startThread\":\"styles_startThread__2DdKA\",\"quickLinks\":\"styles_quickLinks__cJQge\",\"info\":\"styles_info__2f1QB\",\"threadPost\":\"styles_threadPost__3SWHg\",\"postLink\":\"styles_postLink__2yHjb\",\"forum\":\"styles_forum__AVThT\",\"adContainer\":\"styles_adContainer__3zUCc\",\"left\":\"styles_left__2_RIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"styles_back__3iTuS\",\"input\":\"styles_input__rHUWj\",\"sectionTitle\":\"styles_sectionTitle__2wqKD\",\"label\":\"styles_label___0hEN\",\"signup\":\"styles_signup__34diQ\",\"disabled\":\"styles_disabled__3WJTC\"};","import * as React from 'react';\nimport styles from './styles.module.css';\n\ninterface Props {\n  children: any,\n  [prop: string]: any\n}\n\nexport const Width: React.SFC<Props> = ({ children, ...props }) => (\n  <div className={styles.width} {...props}>\n    {children}\n  </div>\n)\n\nconst Body: React.SFC<Props> = ({ children }) => (\n  <div className={styles.body}>\n    <Width>{children}</Width>\n  </div>\n)\n\nexport default Body\n\n","import { useState, useEffect } from 'react'\n\nconst MOBILE = 540\n\ntype WindowSize = {\n  innerHeight: number\n  innerWidth: number\n}\n\nconst getSize = (): WindowSize => ({\n  innerHeight: window.innerHeight,\n  innerWidth: window.innerWidth,\n})\n\ntype AnyFn = (a: any) => any\nconst setEventListener = (event: string, handler: AnyFn) => () => {\n  window.addEventListener(event, handler)\n  return () => window.removeEventListener(event, handler)\n}\n\n\nexport default function useResponsive(mobileWidth: number) {\n  const [windowSize, setWindowSize] = useState<WindowSize>(getSize())\n  const handleResize = () => setWindowSize(getSize())\n\n  useEffect(setEventListener('resize', handleResize))\n\n  return {\n    isMobile: windowSize.innerWidth <= mobileWidth,\n    isDesktop: windowSize.innerWidth > mobileWidth\n  }\n}\n","import * as React from 'react';\nimport styles from './styles.module.scss';\n\ntype XProps = {\n  onClick?: any,\n  ring?: boolean\n}\n\nconst ringStyles = { border: '1px solid', borderRadius: '100%' }\nconst X: React.SFC<XProps> = ({ onClick, ring }) => (\n  <span\n    className={styles.x}\n    style={ring ? ringStyles : {}}\n    onClick={onClick}\n  >\n    x\n  </span>\n)\n\nexport default X\n","const externalLinkTest = /^(http|https):\\/\\/.+\\..+/\nconst imageTest = /(\\.jpg$)|(\\.jpeg$)|(\\.png$)|(\\.gif$)|(\\.svg$)/\nconst userTest = /^@.+/\nconst hashtagTest = /^#.+/\nconst postTest = /^\\/posts\\/.+/\nconst threadTest = /^\\/threads\\/.+/\n\nexport function isImage(str: string) {\n  str = cleanFragment(str)\n  return str.match(imageTest) && str.match(externalLinkTest)\n}\n\nexport function isExternalLink(str: string) {\n  str = cleanFragment(str)\n  return str.match(externalLinkTest)\n}\n\nexport function isUsername(str: string) {\n  str = cleanFragment(str)\n  return str.match(userTest);\n}\n\nexport function isHashtag(str: string) {\n  str = cleanFragment(str)\n  return str.match(hashtagTest)\n}\n\nexport function isPostRef(str: string) {\n  str = cleanFragment(str)\n  return str.match(postTest)\n}\n\nexport function isThreadRef(str: string) {\n  str = cleanFragment(str)\n  return str.match(threadTest)\n}\n\nexport function hasNewline(str: string) {\n  return str.match('\\n')\n}\n\nexport function getUsernames(str: string) {\n  return str\n    .split(' ')\n    .filter(isUsername)\n    .map(f => cleanFragment(f, /^@/))\n}\n\nexport function getHashtags(str: string) {\n  return str\n    .split(' ')\n    .filter(isHashtag)\n    .map(f => cleanFragment(f, /^#/).toLowerCase())\n}\n\nexport function getTags(content: string) {\n  return JSON.stringify({\n    hashtags: getHashtags(content),\n    usernames: getUsernames(content)\n  })\n}\n\nexport function cleanFragment(fragment: string, test?: RegExp) {\n  return fragment\n    .replace(test ? new RegExp(test, 'g') : '', '')\n    .replace(/(\\.|\\?|!|:|;|,|'|\")+$/, '')\n}\n\n","import * as React from 'react'\nimport styles from './styles.module.scss'\n\ntype Props = {\n  url: string,\n  [props: string]: unknown\n}\nexport default function Img({ url, ...props }: Props) {\n  return <img className={styles.img} src={url} {...props} />\n}\n","import * as React from 'react'\nimport replace from 'lodash/replace'\nimport { Link } from 'react-router-dom'\nimport {\n  isExternalLink,\n  isImage,\n  isHashtag,\n  isUsername,\n  isPostRef,\n  isThreadRef,\n  hasNewline,\n  cleanFragment,\n} from '../utils/parsers'\nimport Img from './Img'\n\ntype Fragment = string | React.ReactNode;\n\nconst last = (arr: Array<Fragment>): Fragment => arr[arr.length - 1]\n\nconst imgStyle = {\n  maxHeight: 300,\n}\nconst parseFragment = (fragment: string): Fragment => {\n  if (isImage(fragment)) {\n    return <Img url={fragment} style={imgStyle} alt=\"user posted content\"/>\n\n  } else if (isExternalLink(fragment)) {\n    return <a href={cleanFragment(fragment)} target=\"_blank\" rel=\"noopener noreferrer\">{fragment}</a>\n\n  } else if (isUsername(fragment)) {\n    const userId = cleanFragment(fragment, /^@/)\n    const dirt = fragment.replace(userId, '').replace(/^@/, '')\n    return <><Link to={`/users/${userId}`}>@{userId}</Link>{dirt}</>\n\n  } else if (isHashtag(fragment)) {\n    const hashtag = cleanFragment(fragment, /^#/)\n    const dirt = fragment.replace(hashtag, '').replace(/^#/, '')\n    return <><Link to={`/hashtag/${hashtag.toLowerCase()}`}>#{hashtag}</Link>{dirt}</>\n\n  } else if (isPostRef(fragment)) {\n    const postId = cleanFragment(fragment, /^\\/posts\\//)\n    const dirt = fragment.replace(postId, '').replace(/^\\/posts\\//, '')\n    return <><Link to={`/posts/${postId}`}>/posts/{postId}</Link>{dirt}</>\n\n  } else if (isThreadRef(fragment)) {\n    const threadId = cleanFragment(fragment, /^\\/threads\\//)\n    const dirt = fragment.replace(threadId, '').replace(/^\\/threads\\//, '')\n    return <><Link to={`/threads/${threadId}`}>/threads/{threadId}</Link>{dirt}</>\n\n  } else {\n    return fragment\n  }\n}\n\n\nconst combineFragments = (fragments: Array<Fragment>, fragment: Fragment): Array<Fragment> => {\n  if (!fragments.length) {\n    return [fragment]\n  }\n\n  const lastFragment = last(fragments)\n\n  if (typeof lastFragment === 'string' && typeof fragment === 'string') {\n    return [...fragments.slice(0, -1), lastFragment + ' ' + fragment]\n\n  } else if (typeof lastFragment === 'string') {\n    return [...fragments.slice(0, -1), lastFragment + ' ', fragment]\n\n  } else {\n    return [...fragments, ' ', fragment]\n  }\n}\n\nconst addIndex = (f: React.ReactNode, i: number) => (\n  <React.Fragment key={i}>\n    {f}\n  </React.Fragment>\n)\n\nconst parser = (content: string) => content\n  .split('\\n')\n  .map((paragraph, i) => (\n    <p key={i}>\n      {paragraph\n        .split(' ')\n        .map(parseFragment)\n        .reduce(combineFragments, [])\n        .map(addIndex)\n      }\n    </p>\n  ))\n\ntype Props = { content: string };\n\nexport default function ParsedText({ content }: Props) {\n  return (\n    <>\n      {parser(content)}\n    </>\n  )\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport cx from 'classnames'\n\nimport X from '../../components/X'\nimport ParsedText from '../../components/ParsedText'\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\nimport styles from './styles.module.scss'\nimport { CurrentUser } from './index'\n\ntype AlertDropdownProps = {\n  alerts: CurrentUser['alerts'],\n  readAlert: (id: string) => unknown\n  onEmptyClick?: (a: any) => any\n}\n\nconst Alerts = ({ alerts, readAlert }: AlertDropdownProps) => {\n  return (<>\n    {alerts.map(alert =>\n      <div key={alert.id} className={styles.alert} onClick={() => readAlert(alert.id)}>\n        <X ring />\n        {alert.link\n          ? <Link to={alert.link}>{alert.content}</Link>\n          : <ParsedText content={alert.content} />\n        }\n      </div>\n    )}\n  </>)\n\n\n}\n\nexport const AlertDropdown: React.SFC<AlertDropdownProps> = ({ alerts, onEmptyClick, readAlert }) => (\n  <div className={styles.alertDropdown}>\n    {alerts.length\n      ? <Alerts alerts={alerts} readAlert={readAlert} />\n      : <div className={styles.noAlerts} onClick={onEmptyClick}>No Alerts!</div>\n    }\n  </div>\n)\n\nexport const AlertCircle: React.SFC<{ unread: number }> = ({ unread }) => (\n  <div className={cx(styles.circle, { [styles.unread]: unread })}>\n    {unread || 0}\n  </div>\n)\n","const JWT = '__JWT__'\n\ntype JwtMap = {\n  __currentUser__: string,\n  [username: string]: string\n}\n\ntype JwtUser = {\n  username: string,\n  jwt: string\n}\n\nconst getMapping = (): JwtMap => {\n  const stored = localStorage.getItem(JWT)\n  return stored ? JSON.parse(stored) : { __currentUser__: '' }\n}\n\nconst get = (): string| void => {\n  const mapping = getMapping()\n  return mapping[mapping.__currentUser__]\n}\n\nconst getInnactiveUserList = (): Array<JwtUser> => {\n  const mapping = getMapping()\n  return Object.keys(mapping)\n    .filter(username => (username !== '__currentUser__' && username !== mapping.__currentUser__))\n    .map(username => ({\n      username, jwt: mapping[username]\n    }))\n}\n\nconst getCurrentUser = (): JwtUser => {\n  const mapping = getMapping()\n  return {\n    username: mapping.__currentUser__,\n    jwt: mapping[mapping.__currentUser__]\n  }\n}\n\nconst set = (username: string, jwt: string): void => {\n  const mapping = getMapping()\n  mapping[username] = jwt\n  localStorage.setItem(JWT, JSON.stringify(mapping))\n}\n\nconst setCurrentUser = (username: string) => {\n  const mapping = getMapping()\n  mapping.__currentUser__ = username\n  localStorage.setItem(JWT, JSON.stringify(mapping))\n}\n\nconst clearCurrentUser = () => {\n  const mapping = getMapping()\n  mapping.__currentUser__ = ''\n  localStorage.setItem(JWT, JSON.stringify(mapping))\n}\n\nexport default {\n  get,\n  getCurrentUser,\n  getInnactiveUserList,\n  set,\n  setCurrentUser,\n  clearCurrentUser\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport jwt from '../../utils/jwt'\nimport styles from './styles.module.scss'\n\nconst switchUser = (username: string) => {\n  jwt.setCurrentUser(username)\n  location.reload()\n}\n\nconst logout = () => {\n  jwt.clearCurrentUser()\n  location.reload()\n}\n\nexport const UserDropdown: React.SFC<{}> = () => {\n  const alternativeUsers = jwt.getInnactiveUserList()\n\n  return (\n    <ul className={styles.userDropdown}>\n      <a href=\"#\" onClick={logout}>\n        <li>Logout</li>\n      </a>\n\n      <Link to=\"/messages\">\n        <li>\n          <div>Messages</div>\n        </li>\n      </Link>\n\n      <Link to=\"/profile\">\n        <li>\n          <div>Update Profile</div>\n        </li>\n      </Link>\n\n      <Link to=\"/signup\">\n        <li>\n          <div>Create Account</div>\n        </li>\n      </Link>\n\n      {!!alternativeUsers.length &&\n        <div className={styles.switchAccounts}>\n          <strong>Switch Account</strong>\n          <ul>\n            {alternativeUsers.map(({ username }) => (\n              <li\n                key={username}\n                onClick={() => switchUser(username)}\n              >\n                {username}\n              </li>\n             ))}\n          </ul>\n        </div>\n      }\n    </ul>\n  )\n}\n","import React, { Component, useEffect } from 'react'\nimport cx from 'classnames'\nimport styles from './styles.module.scss'\n\n\ntype Props = {\n  hide: Function,\n  children: any\n}\n\nconst ELEMENT_ID = '__dropdown_component__'\n\nexport default function Dropdown({ children, hide }: Props) {\n  const hideDropdown = (e: any) => {\n    const dropdown = document.getElementById(ELEMENT_ID)\n    if (dropdown && e.target !== dropdown && !dropdown.contains(e.target)) {\n      hide()\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', hideDropdown)\n    return () => document.removeEventListener('click', hideDropdown)\n  })\n\n  return (\n    <div id={ELEMENT_ID} className={cx(styles.dropdown, 'solid')}>\n      {children}\n    </div>\n  )\n}\n","import React, { Component, useState, useEffect, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport cx from 'classnames'\nimport { useQuery, useMutation } from 'urql'\nimport useResponsive from '../../utils/useResponsive'\n\n\nimport styles from './styles.module.scss'\nimport { Width } from '../../components/Body'\n\nimport { AlertDropdown, AlertCircle } from './Alerts'\nimport { UserDropdown } from './User'\nimport Dropdown from './Dropdown'\n\nimport { RouteChildrenProps } from 'react-router'\n\nexport type CurrentUser = {\n    id: string,\n    username: string,\n    avatarUrl?: string\n    alerts: Array<{\n      id: string\n      content: string\n      link?: string\n    }>\n  }\nexport type CurrentUserQuery = {\n  currentUser?: CurrentUser\n}\n\nconst currentUserQuery = `{\n  currentUser {\n    id\n    username\n    avatarUrl\n    alerts: alertsList (condition: { read: false }) {\n      id\n      content\n      link\n    }\n  }\n}`\n\ntype ReadAlertInput = {\n  input: {\n    alertId: string\n  }\n}\n\ntype ReadAlertResponse = {\n  readAlert: {\n    alert: {\n      id: string,\n      read: boolean\n    }\n  }\n}\n\nconst readAlertMutation = `\nmutation readAlert($input: ReadAlertInput!) {\n  readAlert(input: $input) {\n    alert {\n      id\n      read\n    }\n  }\n}`\n\nexport type Props = RouteChildrenProps\n\nexport type State = {\n  dropdownState: null | 'users' | 'alerts'\n}\n\nfunction Nav(props: Props) {\n  const [dropdownState, setDropdownState] = useState<State['dropdownState']>(null)\n  const [{ data, fetching }, executeQuery] = useQuery<CurrentUserQuery>({ query: currentUserQuery })\n  const [response, executeReadAlert] = useMutation<ReadAlertResponse, ReadAlertInput>(readAlertMutation)\n  const currentUser = (data && data.currentUser) || null\n\n  const readAlert = (alertId: string) => executeReadAlert({ input: { alertId } })\n\n  const hideDropdown = () => setDropdownState(null)\n  useEffect(() => props.history.listen(hideDropdown))\n\n  return (\n    <nav className={cx(styles.container, 'solid')}>\n      <Width>\n        <NavBar\n          loading={fetching}\n          currentUser={currentUser}\n          toggleDropdownVisible={setDropdownState}\n        />\n        <div className={styles.dropdownPosition}>\n          {dropdownState &&\n            <Dropdown hide={hideDropdown}>\n              {dropdownState === 'users' && <UserDropdown />}\n              {dropdownState === 'alerts' && currentUser && <AlertDropdown\n                alerts={currentUser.alerts}\n                onEmptyClick={hideDropdown}\n                readAlert={readAlert}\n              />}\n            </Dropdown>\n          }\n        </div>\n      </Width>\n    </nav>\n  )\n}\n\n\n\ntype NavBarProps = {\n  loading: boolean,\n  currentUser: CurrentUserQuery['currentUser'] | null,\n  toggleDropdownVisible: (state: State['dropdownState']) => void,\n}\n\nconst NavBar: React.SFC<NavBarProps> = ({ toggleDropdownVisible, currentUser, loading }) => {\n  return (\n    <div className={styles.content}>\n      <Link to=\"/\">\n        <div className={styles.title}>FriendWorld</div>\n      </Link>\n\n      <div className={styles.links}>\n        {currentUser\n          ? <SignedInMenu currentUser={currentUser} toggleDropdownVisible={toggleDropdownVisible} />\n          : loading ? false : <SignedOutMenu />\n        }\n      </div>\n    </div>\n  )\n}\n\ntype SignedInMenuProps = {\n  currentUser: CurrentUser\n  toggleDropdownVisible: NavBarProps['toggleDropdownVisible']\n}\n\nconst SignedInMenu = ({ currentUser, toggleDropdownVisible }: SignedInMenuProps) => {\n  const { isDesktop, isMobile } = useResponsive(540)\n\n  return (\n    <>\n      <div\n        className={styles.link}\n        onClick={() => toggleDropdownVisible('users')}\n        style={{ maxWidth: '180px', overflow: 'auto' }}\n      >\n        {currentUser.username}\n        <div\n          className={cx(styles.circle, styles.user)}\n          style={{ backgroundImage: `url(${currentUser.avatarUrl})` }}\n        />\n      </div>\n\n      {isDesktop && (\n        <div className={styles.link} onClick={() => toggleDropdownVisible('alerts')}>\n          Alerts\n          <AlertCircle unread={currentUser.alerts.length} />\n        </div>\n      )}\n\n      {isMobile && (\n        <div className={styles.link} onClick={() => toggleDropdownVisible('alerts')}>\n          <AlertCircle unread={currentUser.alerts.length} />\n        </div>\n      )}\n    </>\n  )\n}\n\nconst SignedOutMenu = () => (\n  <>\n    <Link to=\"/login\" className={styles.link}>Login</Link>\n    <Link to=\"/signup\" className={styles.link}>Create Account</Link>\n  </>\n)\n\nexport default Nav\n","import * as React from 'react'\nimport styles from './styles.module.scss'\n\ntype Props = {\n  error: Error | string\n}\n\nconst DisplayError: React.SFC<Props> = ({ error }) => (\n  <div className={styles.error}>\n    An Error Occurred: {JSON.stringify(error, null, 3)}\n  </div>\n)\n\nexport default DisplayError\n","import React, { useState, useEffect } from 'react'\nimport styles from './styles.module.scss'\n\n\nconst Loading: React.SFC<{}> = () => {\n  const [dots, setDots] = useState<string>('')\n\n  useEffect(() => {\n    const interval = setInterval(() => setDots(dots + '.'), 350)\n    return () => clearInterval(interval)\n  })\n\n  return (\n    <div className={styles.loading}>\n      loading{dots}\n    </div>\n)\n}\n\nexport default Loading\n","import React, { useState } from 'react';\nimport { useMutation } from 'urql'\nimport jwt from '../../utils/jwt'\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\nimport styles from './styles.module.scss'\n\n\nconst loginMutation = `\nmutation($input: LoginInput!) {\n  login(input: $input) {\n    jwtToken\n    query {\n      currentUser {\n        id\n        username\n      }\n    }\n  }\n}`\n\n\ntype LoginInput = {\n  input: {\n    username: string,\n    password: string\n  }\n}\ntype LoginResponse = { login: { jwtToken: string }}\ntype Props = {}\n\ntype State = {\n  username: string,\n  password: string\n}\n\nfunction Login() {\n  const [username, setUsername] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n\n  const [{ error, fetching, data }, executeLogin] = useMutation<LoginResponse, LoginInput>(loginMutation)\n\n  if (data) {\n    jwt.set(username, data.login.jwtToken)\n    jwt.setCurrentUser(username)\n    window.location.href = '/'\n  }\n\n  return (\n    <section className={styles.login}>\n      <div className={styles.card}>\n        <h1>Login</h1>\n        {error && <DisplayError error={error} />}\n        {fetching && <Loading />}\n        {!error && !fetching && (\n          <form>\n            <input\n              name=\"fw_username\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <button\n              className={styles.submitButton}\n              onClick={(e) => {\n                e.preventDefault()\n                if (username && password) {\n                  executeLogin({ input: { username, password } })\n                }\n              }}\n            >\n              Submit\n            </button>\n          </form>\n        )}\n      </div>\n    </section>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react';\nimport { useMutation } from 'urql'\nimport jwt from '../../utils/jwt'\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\nimport styles from './styles.module.scss'\n\nconst signupMutation = `\nmutation($input: SignupInput!) {\n  signup(input: $input) {\n    jwtToken\n  }\n}`\n\n\ntype SignupInput = {\n  input: {\n    username: string,\n    password: string\n  }\n}\n\ntype SignupResponse = { signup: { jwtToken: string }}\n\ntype Props = {}\n\ntype State = {\n  username: string,\n  password: string\n}\n\nfunction Signup() {\n  const [username, setUsername] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [passwordConfirm, setPasswordConfirm] = useState<string>('')\n  const [errorText, setErrorText] = useState<string>('')\n  const [{ error, fetching, data }, executeSignup] = useMutation<SignupResponse, SignupInput>(signupMutation)\n\n  const signup = () => {\n    if (!username || !password) {\n      setErrorText('Must include username and password.')\n      return\n    }\n    if (password !== passwordConfirm) {\n      setErrorText('Password must match Password Confirmation')\n      return\n    }\n    executeSignup({ input: { username, password } })\n  }\n\n  const displayErrorText = error\n    ? error.message.includes('violates unique constraint')\n      ? 'That username is already taken. Please try again'\n      : error.message\n    : errorText\n      ? errorText\n      : ''\n\n  if (data && !error) {\n    jwt.set(username, data.signup.jwtToken)\n    jwt.setCurrentUser(username)\n    window.location.href = '/profile'\n  }\n\n  return (\n    <section className={styles.signup}>\n      <div className={styles.card}>\n        <h1>Create Account</h1>\n        <form>\n          <div className={styles.inputs}>\n            <input\n              name=\"fw_username\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={(e) => {\n                setUsername(e.target.value)\n                if (e.target.value.length > 18) setErrorText('Username must be 18 characters or less')\n              }}\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              name=\"password_confirm\"\n              placeholder=\"Password Confirmation\"\n              value={passwordConfirm}\n              onChange={(e) => setPasswordConfirm(e.target.value)}\n            />\n          </div>\n\n          {displayErrorText && <DisplayError error={displayErrorText} />}\n          {fetching && <Loading />}\n          {!fetching && (\n            <button\n              className={styles.submitButton}\n              onClick={(e) => {\n                e.preventDefault()\n                signup()\n              }}\n            >\n              Submit\n            </button>\n          )}\n        </form>\n      </div>\n    </section>\n  )\n}\n\n\n\nexport default Signup\n\n","import * as React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport ParsedText from '../ParsedText'\nimport styles from './styles.module.scss';\n\n\nexport type PostType = {\n  id: string,\n  createdAt: string,\n  content: string,\n  author?: {\n    id: string,\n    username: string\n    avatarUrl?: string\n    postStats?: {\n      totalCount: number\n    }\n  } | null,\n  thread?: {\n    id: string,\n    title: string\n  }\n}\n\ntype Props = {\n  post: PostType\n}\n\nconst Post: React.SFC<Props> = ({ post }) => (\n  <article className={styles.post}>\n    <div className={styles.main}>\n      {!!post.author &&\n        <Link to={`/users/${post.author.username}`} className={styles.panel}>\n          <aside className={styles.panelContainer}>\n            <div className={styles.avatar} style={{ backgroundImage: `url(${post.author.avatarUrl})` }} />\n            <div className={styles.userInfo}>\n              <div className={styles.username}>{post.author.username}</div>\n              {post.author.postStats &&\n                <div className={styles.totalPosts}><strong>Posts:</strong> {post.author.postStats.totalCount}</div>\n              }\n            </div>\n          </aside>\n        </Link>\n      }\n\n\n      <div className={styles.content}>\n        <ParsedText content={post.content} />\n      </div>\n\n    </div>\n    <div className={styles.footer}>\n      <div className={styles.postedAt}>\n        <time>Posted at: {new Date(post.createdAt).toISOString()}</time>\n        <span><Link to={`/posts/${post.id}`}>/posts/{post.id}</Link></span>\n      </div>\n      {!!post.thread && (\n        <div className={styles.threadLink}>\n          In thread: <Link to={`/threads/${post.thread.id}`}>{post.thread.title}</Link>\n        </div>\n      )}\n    </div>\n  </article>\n)\n\nexport default Post\n","import * as React from 'react';\nimport { useMutation, useQuery } from 'urql'\nimport { RouteChildrenProps } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport styles from './styles.module.scss'\nimport Post, { PostType } from '../../components/Post'\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\n\n\ntype PostQuery = {\n  post?: PostType\n}\n\nconst postQuery = `\nquery postById ($id: Int!){\n  post: postById (id: $id) {\n    id\n    createdAt\n    content\n    author {\n      id\n      username\n      avatarUrl\n      postStats: authoredPosts {\n        totalCount\n      }\n    }\n    thread {\n      id\n      title\n    }\n  }\n}`\n\n\nconst Posts: React.SFC<{ id: number }> = ({ id }) => {\n  const [{ error, fetching, data }] = useQuery<PostQuery>({ query: postQuery, variables: { id } })\n\n  return (\n    <section>\n      <div className={styles.back}>\n        <Link to=\"/\">{'< Back to forum'}</Link>\n      </div>\n\n      <div className={styles.left}>\n        {error && <DisplayError error={error} />}\n        {fetching && <Loading />}\n        {data && (\n          data.post\n            ? <Post post={data.post}/>\n            : 'This post does not exist!'\n        )}\n      </div>\n    </section>\n\n  )\n}\n\nexport default Posts\n","import * as React from 'react';\nimport styles from './styles.module.scss';\nimport Img from '../Img'\n\ntype Props = {\n  url: string\n  img?: string\n  content?: string\n}\n\nconst Ad: React.SFC<Props> = ({ url, img, content }) => (\n  <div className={styles.ad}>\n    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n      {img &&\n        <Img url={img} alt={content} />\n      }\n      {content &&\n        <div className={styles.content}>{content}</div>\n      }\n    </a>\n  </div>\n)\n\nexport default Ad\n","import * as React from 'react'\nimport sampleSize from 'lodash/sampleSize'\nimport { useQuery } from 'urql'\nimport { Link } from 'react-router-dom'\nimport Ad from '../../components/Ad'\nimport styles from './styles.module.scss'\n\ntype AdList = Array<{\n  to: string\n  img?: string\n  content?: string\n}>\n\nconst adQuery = `query AdQuery ($n: Int!) {\n  ads: adsList (first: $n) {\n    id\n    url\n    img\n    content\n  }\n}`\n\ntype AdQuery = {\n  ads: Array<{\n    id: string\n    url: string\n    img: string\n    content: string\n  }>\n}\n\ntype Props = {\n  n?: number\n}\nconst AdContainer = ({ n }: Props) => {\n  const [{ data, fetching }] = useQuery<AdQuery>({ query: adQuery, variables: { n: 8 } })\n  if (fetching) return <>loading...</>\n  if (!data) return <></>\n\n  const adList = sampleSize(data.ads, n || 8)\n\n  return (\n    <section className={styles.adContainer}>\n      <div className={styles.label}>SPONSORED CONTENT</div>\n      {adList.map((ad, i) => (\n        <React.Fragment key={i}>\n          <Ad {...ad} />\n        </React.Fragment>\n      ))}\n    </section>\n  )\n}\n\nexport default AdContainer\n","import React, { useState } from 'react'\nimport styles from './styles.module.scss'\nimport profanityFilter from '../../utils/profanityFilter'\n\nconst defaultPlaceholder = \"Join the conversation...\"\n\ntype Props = {\n  onSubmit: (content: string) => unknown,\n  onChange?: (content: string) => unknown,\n  buttonContent?: string,\n  placeholder?: string,\n  inputStyle?: Object\n}\n\nfunction TextInput ({\n  placeholder,\n  buttonContent,\n  inputStyle,\n  onSubmit,\n  onChange,\n}: Props) {\n  const [content, setContent] = useState('')\n\n  const submit = () => {\n    onSubmit(content)\n    setContent('')\n  }\n  const submitOnCommandEnter = (e: any) => {\n    if (e.keyCode === 13 && e.metaKey) {\n      submit()\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.inner}>\n      <textarea\n        className={styles.contentInput}\n        placeholder={placeholder || defaultPlaceholder}\n        onChange={e => {\n          setContent(e.target.value)\n          onChange && onChange(e.target.value)\n        }}\n        value={content}\n        style={inputStyle}\n        onKeyDown={submitOnCommandEnter}\n      />\n      <button\n        className={styles.submitButton}\n        onClick={submit}\n      >\n        {buttonContent || 'Submit'}\n      </button>\n      </div>\n    </div>\n  )\n}\n\nexport default TextInput\n","\nimport each from 'lodash/each'\n\nexport default function profanityFilter (input: string): string {\n  const swap: any = {\n    motherfucker: 'm0therf_cker',\n    fuck: 'f_ck',\n\n    shit: 'sh!t',\n    ' dick ': 'penis',\n    bitch: 'b&tch',\n\n    cunt: 'c%nt',\n    cocksuck: 'c*cks^ck',\n    cock: 'c*ck',\n\n    nigger: 'african-american',\n    nigga: 'pal',\n\n    ' fag ': 'homosexual',\n    faggot: 'homosexual',\n\n    tranny: 'transexual',\n    ' god ': 'g-d',\n    goddamn: 'goshdarn'\n  }\n\n  each(swap, (replaceTo, replaceFrom) => {\n    input = input.replace(replaceFrom, replaceTo)\n  })\n\n\n  return input\n}\n","import React, { Fragment, useCallback } from 'react';\nimport { useMutation, useQuery, OperationResult } from 'urql'\nimport { RouteChildrenProps } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport cx from 'classnames'\nimport styles from './styles.module.scss'\nimport AdContainer from '../AdContainer'\nimport Post, { PostType } from '../../components/Post'\nimport TextInput from '../../components/TextInput'\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\nimport { getTags } from '../../utils/parsers'\nimport useResponsive from '../../utils/useResponsive'\nimport profanityFilter from '../../utils/profanityFilter'\n\n\n\ntype ThreadQuery = {\n  thread?: {\n    id: number\n    title: string\n    posts: Array<PostType>\n  }\n  currentUser?: {\n    id: string\n  }\n}\n\nconst threadQuery = `\nquery threadById ($id: Int!) {\n  thread: threadById (id: $id) {\n    id\n    title\n    posts: postsList {\n      id\n      content\n      createdAt\n      author {\n        id\n        username\n        avatarUrl\n        postStats: authoredPosts {\n          totalCount\n        }\n      }\n    }\n  }\n  currentUser {\n    id\n  }\n}`\n\n\nconst createPostMutation = `\nmutation createPost($input: CreatePostInput!) {\n  createPost(input: $input) {\n    post {\n      id\n      content\n      createdAt\n      author {\n        id\n        avatarUrl\n        username\n      }\n    }\n  }\n}`\n\ntype CreatePostInput = {\n  input: {\n    content: string,\n    threadId: number,\n    tags: string,\n    // {\n    //   hashtags: Array<string>,\n    //   usernames: Array<string>\n    // }\n  }\n}\n\ntype CreatePostResponse = { createPost: { post: PostType } }\n\ntype AddPostProps = {\n  threadId: number,\n  disabled?: boolean\n}\nconst AddPost: React.SFC<AddPostProps> = ({ threadId, disabled }) => {\n  const [response, executeCreatePost] = useMutation<CreatePostResponse, CreatePostInput>(createPostMutation)\n\n  const submit = (content: string) => {\n    if (!content) return\n    executeCreatePost({\n      input: {\n        threadId,\n        content: profanityFilter(content),\n        tags: getTags(content)\n      }\n    })\n  }\n\n  return (\n    <>\n      {disabled && (\n        <Link to=\"/signup\">\n          <h2 className={styles.signup}>Create An Account To Join The Conversation!</h2>\n        </Link>\n      )}\n      <div className={cx(styles.addPost, disabled && styles.disabled)}>\n        <TextInput onSubmit={submit} />\n      </div>\n    </>\n  )\n}\n\n\nconst Threads: React.SFC<{ id: number }> = ({ id }) => {\n  const { isMobile, isDesktop } = useResponsive(820)\n  const [query, executeQuery] = useQuery<ThreadQuery>({ query: threadQuery, variables: { id } })\n\n  const refetch = useCallback(\n    () => executeQuery({ requestPolicy: 'network-only' }),\n    []\n  );\n  const showAd = (i: number) => isMobile && !((i + 1) % 4)\n\n  const isError = query.error && <DisplayError error={query.error} />\n  const isLoading = query.fetching && <Loading />\n  const isData = query.data && (query.data.thread ? (\n    <div className={styles.container}>\n      <header className={styles.threadTitle}>\n        <h2 >{query.data.thread.title}</h2>\n      </header>\n      <div>\n        <Link to={`/threads/${query.data.thread.id}`}>\n          <div className={styles.threadLink}>\n            /threads/{query.data.thread.id}\n          </div>\n        </Link>\n        {query.data.thread.posts.map((post, i) =>\n          <Fragment key={post.id}>\n            {showAd(i) &&\n              <div className={styles.ad}>\n                <AdContainer n={1}/>\n              </div>\n            }\n            <Post post={post} />\n          </Fragment>\n        )}\n        <AddPost\n          threadId={query.data.thread.id}\n          disabled={!query.data.currentUser}\n        />\n      </div>\n    </div>\n  ) : 'This thread does not exist!')\n\n  return (\n    <section>\n      <div className={styles.back}>\n        <Link to=\"/\">{'< Back to forum'}</Link>\n      </div>\n\n      <div className={styles.threadContainer}>\n        <div className={styles.left}>\n          {isError}\n          {isLoading}\n          {isData}\n        </div>\n\n        {isDesktop && <div className={styles.adContainer}><AdContainer /></div>}\n      </div>\n    </section>\n  )\n}\n\nexport default Threads\n\n","import React, { useState } from 'react';\nimport { useQuery, useMutation } from 'urql'\nimport { Link } from 'react-router-dom'\nimport cx from 'classnames'\n\n\nimport styles from './styles.module.scss';\nimport { getTags } from '../../utils/parsers'\nimport profanityFilter from '../../utils/profanityFilter'\nimport TextInput from '../../components/TextInput'\nimport Post from '../../components/Post'\n\n\n\ntype UserQuery = {\n  currentUser?: {\n    id: string\n    username: string\n    avatarUrl: string\n    postStats: {\n      totalCount: number\n    }\n  }\n}\n\nconst userQuery = `{\n  currentUser {\n    id\n    username\n    avatarUrl\n    postStats: authoredPosts {\n      totalCount\n    }\n  }\n}`\n\ntype CreateThreadInput = {\n  input: {\n    title: string,\n    content: string,\n    tags: string\n    // {\n    //   hashtags: Array<string>,\n    //   usernames: Array<string>\n    // }\n  }\n}\ntype CreateThreadResponse = { createThread: { thread: { id: string, title: string } } }\n\nconst createThreadMutation = `\nmutation createThread($input: CreateThreadInput!) {\n  createThread(input: $input) {\n    thread {\n      id\n      title\n    }\n  }\n}`\n\n\nconst NewThread: React.SFC<{}> = () => {\n  const [title, setTitle] = useState<string>('')\n  const [content, setContent] = useState<string>('')\n  const [query] = useQuery<UserQuery>({ query: userQuery })\n  const [response, executeCreateThread] = useMutation<CreateThreadResponse, CreateThreadInput>(createThreadMutation)\n\n  const createThread = () => {\n    if (!title || !content) return\n    executeCreateThread({\n      input: {\n        title: profanityFilter(title),\n        content: profanityFilter(content),\n        tags: getTags(title + ' ' + content),\n      }\n    })\n  }\n\n  if (response.data) {\n    window.location.href = `/threads/${response.data.createThread.thread.id}`\n    return <div />\n  }\n  if (query.fetching || response.fetching) return <span>loading...</span>\n\n  const disabled = query.data && !query.data.currentUser\n  const author = query.data && query.data.currentUser && {\n    ...query.data.currentUser,\n    postStats: {\n      totalCount: query.data.currentUser.postStats.totalCount + 1\n    }\n  }\n\n  return (\n    <section className={styles.newThread}>\n      <div className={styles.back}>\n        <Link to=\"/\">{'< Back to forum'}</Link>\n      </div>\n      {!disabled && <h1 className={styles.sectionTitle}>New Thread</h1>}\n      {disabled && (\n        <Link to=\"/signup\">\n          <h2 className={styles.signup}>Create An Account To Join The Conversation!</h2>\n        </Link>\n      )}\n\n      <div className={cx({ [styles.disabled]: disabled })}>\n        <h2 className={styles.label}>Title</h2>\n        <input\n          className={styles.input}\n          onChange={e => setTitle(e.target.value)}\n          value={title}\n        />\n        <h2 className={styles.label}>Content</h2>\n        <TextInput\n          onSubmit={createThread}\n          onChange={setContent}\n          buttonContent=\"Start Thread\"\n          placeholder=\"\"\n          inputStyle={{ height: '200px' }}\n        />\n        {(title || content) && (\n          <>\n            <h2 className={styles.label}>[PREVIEW] {title}</h2>\n            <Post\n              post={{\n                id: 'XX',\n                createdAt: new Date().toString(),\n                content,\n                author,\n              }}\n            />\n          </>\n        )}\n      </div>\n    </section>\n  )\n}\n\nexport default NewThread\n","import React, { useState } from 'react';\nimport { useQuery, useMutation } from 'urql'\nimport { Link, Redirect } from 'react-router-dom'\nimport { RouteComponentProps } from 'react-router'\n\nimport styles from './styles.module.scss'\nimport Post, { PostType } from '../../components/Post'\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\nimport useResponsive from '../../utils/useResponsive'\n\nimport { RouteChildrenProps } from 'react-router'\n\ntype CurrentUser = {\n  id: string\n  createdAt: string\n  username: string\n  avatarUrl: string\n  email: string | null\n  gender: string\n  birthday: string | null\n  bio: string\n  job: string\n  interests: string\n  websites: string\n  media: string\n  religion: string\n  politics: string\n  trackingInfo: unknown\n  postStats: {\n    totalCount: number\n  }\n}\ntype CurrentUserQuery = {\n  currentUser?: CurrentUser\n}\n\nconst userProps = `\n  id\n  createdAt\n  username\n  avatarUrl\n  email\n  gender\n  birthday\n  bio\n  job\n  interests\n  websites\n  media\n  religion\n  politics\n`\n\nconst currentUserQuery = `{\n  currentUser {\n    ${userProps}\n    trackingInfo\n    postStats: authoredPosts {\n      totalCount\n    }\n  }\n}`\n\n\nconst updateUserMutation = `mutation UpdateUser($input: UpdateUserInput!) {\n  updateUser(input: $input) {\n    user {\n      ${userProps}\n    }\n  }\n}`\n\ntype UpdateUserInput = {\n  input: {\n    avatarUrl?: string\n    email?: string | null\n    gender?: string\n    birthday?: string | null\n    bio?: string\n    job?: string\n    interests?: string\n    websites?: string\n    media?: string\n    religion?: string\n    politics?: string\n  }\n}\n\ntype UpdateUserPayload = {\n  user: UpdateUserInput['input']\n}\n\nconst formatDate = (date: string) => new Date(date).toLocaleString('en-US', {\n  weekday: 'long',\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric'\n})\n\ntype Props = RouteComponentProps\n\nexport default function Profile({ history }: Props) {\n  const [{ data, error, fetching }] = useQuery<CurrentUserQuery>({ query: currentUserQuery })\n  const goto = (url: string) => history.push(url)\n\n  if (error) return <DisplayError error={error} />\n  if (fetching) return <Loading />\n  if (!data || !data.currentUser) return <Redirect to=\"/signup\" />\n\n  return <ProfileContent currentUser={data.currentUser} goto={goto} />\n}\n\nconst validDate = (dateStr: string) => Date.parse(dateStr) ? new Date(dateStr).toISOString() : null\nconst validEmail = (emailStr: string) => emailStr.match(/^.+@.+\\..+$/) ? emailStr : null\n\ntype ContentProps = {\n  currentUser: CurrentUser,\n  goto: (url: string) => unknown\n}\n\nfunction ProfileContent ({ currentUser, goto }: ContentProps) {\n  const [avatarUrl, setAvatarUrl] = useState<string>(currentUser.avatarUrl)\n  const [email, setEmail] = useState<string>(currentUser.email || '')\n  const [gender, setGender] = useState<string>(currentUser.gender)\n  const [birthday, setBirthday] = useState<string>(currentUser.birthday || '')\n  const [bio, setBio] = useState<string>(currentUser.bio)\n  const [job, setJob] = useState<string>(currentUser.job)\n  const [interests, setInterests] = useState<string>(currentUser.interests)\n  const [websites, setWebsites] = useState<string>(currentUser.websites)\n  const [media, setMedia] = useState<string>(currentUser.media)\n  const [religion, setReligion] = useState<string>(currentUser.religion)\n  const [politics, setPolitics] = useState<string>(currentUser.politics)\n\n  const [submitted, setSubmitted] = useState<boolean>(false)\n  const { isMobile, isDesktop } = useResponsive(540)\n\n\n  const [response, executeUpdateUser] = useMutation<UpdateUserPayload, UpdateUserInput>(updateUserMutation)\n\n  const bdayError = submitted && birthday && !validDate(birthday) ? 'Birthday must be a valid date' : ''\n  const emailError = submitted && email && !validEmail(email) ? 'Email must be in correct format' : ''\n\n  const header = (\n    <header className={styles.header}>\n      <h1 className={styles.intro}>Update Profile: {currentUser.username}</h1>\n      <div>uuid: {currentUser.id}</div>\n    </header>\n  )\n\n  const updateUser = async () => {\n    setSubmitted(true)\n    await executeUpdateUser({\n      input: {\n        email: validEmail(email),\n        birthday: validDate(birthday),\n        avatarUrl,\n        gender,\n        bio,\n        job,\n        interests,\n        websites,\n        media,\n        religion,\n        politics\n      }\n    })\n    goto(`/users/${currentUser.username}`)\n  }\n\n  return (\n    <div className={styles.profile}>\n      {isMobile && header}\n      <div className={styles.content}>\n        <div className={styles.left}>\n          <div>\n            <div className={styles.avatar} style={{ backgroundImage: `url(${avatarUrl})` }} />\n            <div><strong>Posts:</strong> {currentUser.postStats.totalCount}</div>\n          </div>\n        </div>\n\n        <div className={styles.right}>\n          {isDesktop && header}\n          <div className={styles.buttonContainer}>\n            <button className={styles.submitButton} onClick={updateUser}>Update Profile</button>\n          </div>\n\n          <div className={styles.inputSection}>\n            <h3>Avatar Url</h3>\n            <input\n              className={styles.contentInput}\n              value={avatarUrl}\n              placeholder=\"http://www.website.com/image.jpeg\"\n              onChange={e => setAvatarUrl(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.inputSection}>\n            <h3>Email</h3>\n            <input\n              className={styles.contentInput}\n              value={email}\n              placeholder=\"email@website.com\"\n              onChange={e => setEmail(e.target.value)}\n            />\n            {!!emailError && <div>{emailError}</div>}\n          </div>\n\n          <div className={styles.inputSection}>\n            <h3>Gender</h3>\n            <input\n              className={styles.contentInput}\n              value={gender}\n              placeholder=\"Gender\"\n              onChange={e => setGender(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.inputSection}>\n            <h3>Birthday</h3>\n            <input\n              className={styles.contentInput}\n              value={birthday}\n              placeholder=\"03/11/19\"\n              onChange={e => setBirthday(e.target.value)}\n            />\n            {!!bdayError && <div>{bdayError}</div>}\n          </div>\n\n          <div className={styles.inputSection}>\n            <h3>About Me</h3>\n            <textarea\n              className={styles.contentInput}\n              value={bio}\n              placeholder=\"Tell us about yourself!\"\n              onChange={e => setBio(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.inputSection}>\n            <h3>Occupation</h3>\n            <input\n              className={styles.contentInput}\n              value={job}\n              placeholder=\"Accountant\"\n              onChange={e => setJob(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.inputSection}>\n            <h3>Favorite Websites</h3>\n            <input\n              className={styles.contentInput}\n              value={websites}\n              placeholder=\"friendworld.social, fastcashmoneyplus.biz\"\n              onChange={e => setWebsites(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.inputSection}>\n            <h3>Favorite Movies, TV shows, and Music</h3>\n            <input\n              className={styles.contentInput}\n              value={media}\n              placeholder=\"The Godfather, Citizen Kane, Casablanca\"\n              onChange={e => setMedia(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.inputSection}>\n            <h3>Religious Views</h3>\n            <input\n              className={styles.contentInput}\n              value={religion}\n              placeholder=\"God\"\n              onChange={e => setReligion(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.inputSection}>\n            <h3>Political Views</h3>\n            <input\n              className={styles.contentInput}\n              value={politics}\n              placeholder=\"Conservative\"\n              onChange={e => setPolitics(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.buttonContainer}>\n            <button className={styles.submitButton} onClick={updateUser}>Update Profile</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","import React, { Component } from 'react';\nimport { useQuery } from 'urql'\nimport styles from './styles.module.scss'\nimport { Link } from 'react-router-dom'\nimport Post from '../../components/Post'\nimport DisplayError from '../../components/DisplayError'\nimport ParsedText from '../../components/ParsedText'\nimport Loading from '../../components/Loading'\nimport useResponsive from '../../utils/useResponsive'\n\nconst userProps = `\n  id\n  createdAt\n  username\n  avatarUrl\n  email\n  gender\n  birthday\n  bio\n  job\n  interests\n  websites\n  media\n  religion\n  politics\n`\nconst userQuery = `\nquery userByUsername ($username: UsernameDomain!){\n  user: userByUsername (username: $username) {\n    id\n    createdAt\n    username\n    avatarUrl\n    email\n    gender\n    birthday\n    bio\n    job\n    interests\n    websites\n    media\n    religion\n    politics\n    trackingInfo\n    postStats: authoredPosts {\n      totalCount\n    }\n    posts: authoredPostsList (first: 10, orderBy: [CREATED_AT_DESC]) {\n      id\n      content\n      createdAt\n      thread {\n        id\n        title\n      }\n    }\n  }\n}`\n\ntype UserQuery = {\n  user: {\n    id: string\n    createdAt: string\n    username: string\n    avatarUrl: string | null\n    email: string | null\n    gender: string | null\n    birthday: string | null\n    bio: string | null\n    job: string | null\n    interests: string | null\n    websites: string | null\n    media: string | null\n    religion: string | null\n    politics: string | null\n    postStats: {\n      totalCount: number\n    }\n    posts: Array<{\n      id: string\n      content: string\n      createdAt: string\n      thread: {\n        id: string\n        title: string\n      }\n\n    }>\n  } | null\n}\n\nconst InfoSection = ({ title, info }: { title: string, info: any }) => (\n  info && (\n    <div className={styles.infoSection}>\n      <h3>{title}</h3>\n      <ParsedText content={info} />\n    </div>\n  )\n)\n\ntype Props = {\n  username: string\n}\n\nconst formatDate = (date: string) => new Date(date).toLocaleString('en-US', {\n  weekday: 'long',\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric'\n})\n\nconst User: React.SFC<Props> = ({ username }) => {\n  const [{ error, fetching, data }] = useQuery<UserQuery>({ query: userQuery, variables: { username } })\n  const { isMobile, isDesktop } = useResponsive(540)\n\n  if (error) return <DisplayError error={error} />\n  if (fetching) return <Loading />\n  if (!data || !data.user) return (\n    <div style={{ margin: '20px 0', textAlign: 'center' }}>\n      {username} is not an active Friendworld user!\n    </div>\n  )\n\n  const { user } = data\n\n  const header = (\n    <header className={styles.header}>\n      <h1 className={styles.intro}>Welcome to {user.username}'s Profile!</h1>\n      <h4 className={styles.memberSince}>{user.username} has been a member since {formatDate(user.createdAt)}</h4>\n    </header>\n  )\n\n  return (\n    <div className={styles.profile}>\n      {isMobile && header}\n      <div className={styles.content}>\n        <div className={styles.left}>\n          <div>\n            <div className={styles.avatar} style={{ backgroundImage: `url(${user.avatarUrl})` }} />\n            <div><strong>Posts:</strong> {user.postStats.totalCount}</div>\n            <div className={styles.sendMessage}>\n              <Link to={`/messages/${user.username}`}>Message {user.username}</Link>\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.right}>\n          {isDesktop && header}\n          <div className={styles.userInfo}>\n\n          <InfoSection title=\"Gender\" info={user.gender} />\n          <InfoSection title=\"Birthday\" info={user.birthday} />\n          <InfoSection title=\"About Me\" info={user.bio} />\n          <InfoSection title=\"Occupation\" info={user.job} />\n          <InfoSection title=\"Favorite Websites\" info={user.websites} />\n          <InfoSection title=\"Favorite Movies, TV shows, and Music\" info={user.media} />\n          <InfoSection title=\"Religious Views\" info={user.religion} />\n          <InfoSection title=\"Political Views\" info={user.politics} />\n\n          </div>\n          <div className={styles.recentPosts}>\n            {user.posts.length ? (<>\n              <h2>Recent posts by {user.username}:</h2>\n              {user.posts.map(post => (\n                <div className={styles.postContainer} key={post.id}>\n                  <Post post={post} />\n                </div>\n              ))}\n            </>) : (\n              <h3>This user has not made any posts yet!</h3>\n            )}\n          </div>\n\n          <div className={styles.uuid}>user uuid: {user.id}</div>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default User\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useQuery } from 'urql'\nimport orderBy from 'lodash/orderBy'\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\nimport styles from './styles.module.scss'\n\nconst messagesDataQuery = `{\n  messageData: currentUser {\n    username\n    sent: messagesSentList {\n      createdAt\n      user: to {\n        username\n      }\n    }\n    received: messagesReceivedList {\n      createdAt\n      user: from {\n        username\n      }\n    }\n  }\n}`\n\ntype MessageData = {\n  createdAt: string\n  user: {\n    username: string\n  }\n}\ntype MessagesDataQuery = {\n  messageData: null | {\n    username: string\n    sent: Array<MessageData>\n    received: Array<MessageData>\n  }\n}\n\nconst collectMessages = (\n  messages: Map<string, Date>,\n  { createdAt, user: { username } }: MessageData\n) => {\n  const _createdAt = new Date(createdAt)\n  // @ts-ignore\n  if (!messages.has(username) || (messages.get(username) < _createdAt)) {\n    messages.set(username, _createdAt)\n  }\n  return messages\n}\n\nconst uniqueSortedUsers = (messageData: MessagesDataQuery['messageData']) => {\n  if (!messageData) return []\n\n  const allMessages = [...messageData.sent, ...messageData.received]\n  const messages = allMessages.reduce(collectMessages, new Map())\n\n  const values = Array.from(messages.entries())\n  return orderBy(values, [1]).reverse().map(m => m[0])\n}\n\nexport default function SidePanel() {\n  const [{ error, fetching, data }] = useQuery<MessagesDataQuery>({\n    query: messagesDataQuery\n  })\n\n  if (error) return <DisplayError error={error} />\n  if (fetching) return <Loading />\n  if (!data || !data.messageData) return null\n\n  const messageNames = uniqueSortedUsers(data.messageData)\n\n\n  return (\n    <aside className={styles.sidePanelContainer}>\n      <div className={styles.sidePanel}>\n        {messageNames.length ?\n          messageNames.map(username => (\n            <Fragment key={username}>\n              <Link to={`/messages/${username}`}>\n                <div className={styles.user}>{username}</div>\n              </Link>\n            </Fragment>\n          ))\n          : <div className={styles.emptyUsers}>You have no conversations.</div>\n        }\n      </div>\n    </aside>\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useQuery, useMutation } from 'urql'\nimport { Link, Redirect } from 'react-router-dom'\nimport orderBy from 'lodash/orderBy'\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\nimport ParsedText from '../../components/ParsedText'\nimport styles from './styles.module.scss'\n\n\nconst requestedUserQuery = `query messagesByUsername ($username: UsernameDomain!) {\n  currentUser {\n    username\n  }\n  requestedUser: userByUsername(username: $username) {\n    sent: messagesSentList {\n      id\n      content\n      createdAt\n      to {\n        username\n      }\n      from {\n        username\n      }\n    }\n    received: messagesReceivedList {\n      id\n      content\n      createdAt\n      to {\n        id\n        username\n      }\n      from {\n        id\n        username\n      }\n    }\n  }\n}`\n\nconst createMessageMutation = `mutation createMessage ($input: CreateMessageInput!) {\n  createMessage (input: $input) {\n    message {\n      id\n      content\n      from {\n        id\n        username\n      }\n    }\n  }\n}`\n\ntype Message = {\n  id: string\n  content: string\n  createdAt: string\n  to: {\n    id: string\n    username: string\n  }\n  from: {\n    id: string\n    username: string\n  }\n}\n\ntype RequestedUserQuery = {\n  currentUser?: {\n    username: string\n  }\n  requestedUser: {\n    sent: Array<Message>\n    received: Array<Message>\n  }\n}\n\ntype CreateMessageInput = {\n  input: {\n    toUsername: string\n    content: string\n  }\n}\n\ntype CreateMessagePayload = {\n  createMessage: {\n    message: Message\n  }\n}\n\ntype Props = {\n  username?: string | null\n}\n\nexport default function MessagePanel ({ username }: Props) {\n  const $sentMessages = useRef<any>(null)\n  const [messageToSend, setMessageToSend] = useState<string>('')\n  const [{ error, fetching, data }] = useQuery<RequestedUserQuery>({\n    query: requestedUserQuery,\n    variables: { username: username || '' }\n  })\n  const [\n    response,\n    executeCreateMessage\n  ] = useMutation<CreateMessagePayload, CreateMessageInput>(createMessageMutation)\n\n  useEffect(() => {\n    if ($sentMessages.current) {\n      $sentMessages.current.scrollTop = $sentMessages.current.scrollHeight\n    }\n  })\n\n  const sendMessage = (keyPressed?: string) => {\n    if (keyPressed === 'Enter' && !!messageToSend) {\n      executeCreateMessage({\n        input: {\n          content: messageToSend,\n          toUsername: username || ''\n        }\n      })\n      setMessageToSend('')\n    }\n  }\n\n  if (error) return <DisplayError error={error} />\n  if (fetching) return <Loading />\n  if (!data || !data.currentUser) return null\n\n  if (data.currentUser.username === username) return <Redirect to=\"/messages\" />\n\n  const collectedMessages = data.requestedUser ? collectMessages(data.requestedUser) : []\n  const sentMessages = collectedMessages.map(message => (\n    <div className={styles.message} key={message.id}>\n      <div className={styles.sender}>\n        <Link to={`/users/${message.from.username}`}>\n          <strong>\n            {message.from.username}\n          </strong>\n        </Link>\n        <time>[{message.createdAt}]</time>\n      </div>\n      <div className={styles.content}>\n        <ParsedText content={message.content} />\n      </div>\n    </div>\n  ))\n\n  return (\n    <section className={styles.messagePanel}>\n      {!data.requestedUser && `${username} is not an active FriendWorld user`}\n      {data.requestedUser && <>\n        <div ref={$sentMessages} className={styles.sentMessages}>\n          {data.requestedUser && (collectedMessages.length\n            ? sentMessages\n            : `Send ${username} a message!`\n          )}\n        </div>\n\n        <input\n          className={styles.sendBox}\n          value={messageToSend}\n          onChange={e => setMessageToSend(e.target.value)}\n          onKeyPress={e => sendMessage(e.key)}\n          placeholder=\"Press ENTER to send message\"\n        />\n      </>}\n\n    </section>\n  )\n}\n\nconst collectMessages = (requestedUser: RequestedUserQuery['requestedUser']) => orderBy([\n  ...requestedUser.received,\n  ...requestedUser.sent\n], 'createdAt')\n","import React, { Fragment, useState } from 'react'\nimport { useMutation } from 'urql'\nimport cx from 'classnames'\n\nimport styles from './styles.module.scss'\n\nconst createMessageMutation = `mutation createMessage ($input: CreateMessageInput!) {\n  createMessage (input: $input) {\n    message {\n      id\n      content\n      from {\n        id\n        username\n      }\n    }\n  }\n}`\n\ntype Message = {\n  id: string\n  content: string\n  createdAt: string\n  to: {\n    id: string\n    username: string\n  }\n  from: {\n    id: string\n    username: string\n  }\n}\n\ntype CreateMessageInput = {\n  input: {\n    toUsername: string\n    content: string\n  }\n}\n\ntype CreateMessagePayload = {\n  createMessage: {\n    message: Message\n  }\n}\n\nexport default function NewMessagePanel() {\n  const [messageToSend, setMessageToSend] = useState<string>('')\n  const [newUser, setNewUser] = useState<string>('')\n  const [\n    response,\n    executeCreateMessage\n  ] = useMutation<CreateMessagePayload, CreateMessageInput>(createMessageMutation)\n\n  const sendMessage = () => {\n    if (!!messageToSend && !!newUser) {\n      executeCreateMessage({\n        input: {\n          content: messageToSend,\n          toUsername: newUser\n        }\n      }).then(() => {\n        window.location.href = `messages/${newUser}`\n      })\n    }\n  }\n\n  const submitOnCommandEnter = (e: any) => {\n    if (e.keyCode === 13 && e.metaKey) {\n      sendMessage()\n    }\n  }\n\n  return (\n    <section className={styles.messagePanel}>\n      <div>\n        Send a new message to:\n        <div>\n          <input\n            className={styles.sendBox}\n            placeholder=\"Enter username here\"\n            value={newUser}\n            onChange={e => setNewUser(e.target.value)}\n          />\n          <textarea\n            className={cx(styles.sendBox, styles.newMessageBox)}\n            value={messageToSend}\n            onChange={e => setMessageToSend(e.target.value)}\n            placeholder=\"Enter message here\"\n            onKeyDown={submitOnCommandEnter}\n          />\n        </div>\n        <button className={styles.submitButton} onClick={sendMessage}>Send</button>\n      </div>\n    </section>\n  )\n}\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom'\n\nimport { useQuery } from 'urql'\nimport orderBy from 'lodash/orderBy'\nimport styles from './styles.module.scss'\nimport useResponsive from '../../utils/useResponsive'\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\nimport SidePanel from './SidePanel'\nimport MessagePanel from './MessagePanel'\nimport NewMessagePanel from './NewMessagePanel'\n\n\nconst currentUserQuery = `{\n  currentUser {\n    username\n  }\n}`\n\ntype CurrentUserQuery = {\n  currentUser?: {\n    username: string\n  }\n}\n\ntype Props = {\n  username?: string | null\n}\n\ntype State = {\n  newMessage: boolean\n}\n\nconst Messages: React.SFC<Props> = ({ username }) => {\n  const { isMobile, isDesktop } = useResponsive(450)\n  const [newMessage, setNewMessage] = useState<State['newMessage']>(false)\n  const [{ data, error, fetching }] = useQuery<CurrentUserQuery>({ query: currentUserQuery })\n\n  if (data && !data.currentUser) {\n    return <Redirect to=\"/signup\" />\n  } else if (data && data.currentUser && data.currentUser.username === username) {\n    return <Redirect to=\"/messages\" />\n  }\n\n  return (\n    <div className={styles.messages}>\n      <header className={styles.header}>\n        <h1>Message Console</h1>\n        {isMobile && (newMessage || username)\n          ? <Link to=\"/messages\" onClick={() => setNewMessage(false)}>{'< All Messages'}</Link>\n          : <Link to=\"/messages\" onClick={() => setNewMessage(true)}>New Message</Link>\n        }\n      </header>\n\n      <section className={styles.messagesSection}>\n        {isMobile && (\n          <div className={styles.mobileContainer}>\n            {username && <MessagePanel username={username} />}\n            {!username && newMessage && <NewMessagePanel />}\n            {!username && !newMessage && <SidePanel />}\n          </div>\n        )}\n\n        {isDesktop && (\n          <div className={styles.desktopContainer}>\n            <SidePanel />\n\n            {username && <MessagePanel username={username} />}\n            {!username && <NewMessagePanel />}\n\n          </div>\n        )}\n      </section>\n    </div>\n  )\n}\n\nexport default Messages\n","import * as React from 'react';\nimport { useQuery } from 'urql'\nimport { Link } from 'react-router-dom'\nimport styles from './styles.module.scss'\nimport useResponsive from '../../utils/useResponsive'\n\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\nimport AdContainer from '../AdContainer'\n\n\nconst threadQuery = `{\n  currentUser {\n    id\n  }\n  threads: threadsList (orderBy: [LATEST_POST_TIME_DESC]) {\n    id\n    title\n    latestPostTime\n    postStats: posts {\n      totalCount\n    }\n    posts: postsList (first: 1, orderBy: [CREATED_AT_DESC]) {\n      author {\n        username\n      }\n    }\n  }\n}`\n\ntype Thread = {\n  id: string,\n  title: string,\n  latestPostTime: string,\n  posts: Array<{ author: { username: string } }>\n  postStats: {\n    totalCount: number\n  }\n}\ntype ThreadQuery = {\n  threads: Array<Thread>\n  currentUser: null | {\n    id: string\n  }\n}\n\nconst ThreadPost = ({ thread }: { thread: Thread }) => {\n  const userName = thread.posts[0] && thread.posts[0].author.username\n  const title = thread.title.length > 297\n    ? thread.title.substring(0, 297) + '...'\n    : thread.title\n\n  return (\n    <article key={thread.id} className={styles.threadPost}>\n      <Link className={styles.postLink} to={`/threads/${thread.id}`}>{title}</Link>\n      <div className={styles.info}><strong>LAST POST:</strong> <time>[{thread.latestPostTime}]</time></div>\n      <div className={styles.info}><strong>by: </strong>\n        <Link to={`/users/${userName}`}>{userName}</Link>\n      </div>\n      <div className={styles.info}><strong>POSTS:</strong> {thread.postStats.totalCount}</div>\n    </article>\n  )\n}\n\n\nconst Forum: React.SFC<{}> = () => {\n  const { isMobile, isDesktop } = useResponsive(540)\n  const [{ fetching, error, data }] = useQuery<ThreadQuery>({ query: threadQuery })\n  const showAd = (i: number) => isMobile && !((i + 1) % 6)\n\n  return (\n    <section className={styles.forum}>\n      <section className={styles.left}>\n        {fetching && <Loading />}\n        {error && <DisplayError error={error} />}\n        {data && (\n          <>\n            {data.currentUser &&\n              <div className={styles.quickLinks}>\n                <strong>quick links:</strong>{' '}\n                <Link to=\"/messages\">Messages</Link>{', '}\n                <Link to=\"/profile\">Profile</Link>{', '}\n                <Link to=\"/stats\">Stats</Link>\n              </div>\n            }\n            <header className={styles.header}>\n              <h1>Forum</h1>\n              <Link to=\"/threads/new\" className={styles.startThread}>\n                Start A Thread!\n              </Link>\n            </header>\n            {data.threads.map((thread, i) =>\n              <React.Fragment key={thread.id}>\n                {showAd(i) && <div className={styles.adContainer}><AdContainer n={1} /></div>}\n                <ThreadPost thread={thread} />\n              </React.Fragment>\n            )}\n          </>\n        )}\n      </section>\n      {isDesktop && <AdContainer />}\n    </section>\n\n  )\n}\n\nexport default Forum\n","import React, { useState } from 'react';\nimport { useQuery } from 'urql'\nimport DisplayError from '../../components/DisplayError'\nimport Loading from '../../components/Loading'\nimport styles from './styles.module.scss'\n\n\nconst statsQuery = `{\n  userStatsList {\n    username\n    postCount\n  }\n}`\n\ntype StatsQuery = {\n  userStatsList: Array<{\n    username: string\n    postCount: string\n  }>\n}\n\n\n\nfunction Stats() {\n  const [{ error, fetching, data }] = useQuery<StatsQuery>({ query: statsQuery })\n\n  if (error) {\n    debugger\n    return <DisplayError error={error} />\n  }\n  if (fetching) return <Loading />\n  if (!data) return null\n\n  return (\n    <section className={styles.stats}>\n      <h1>User Stats</h1>\n      <h2>Top Posters:</h2>\n      <ol>\n        {data.userStatsList.map((stat, i) => (\n          <li>\n            {i + 1}. {stat.username}: {stat.postCount}\n          </li>\n        ))}\n      </ol>\n    </section>\n  )\n}\n\nexport default Stats\n","import * as React from 'react'\nimport { withRouter, Route, Switch } from 'react-router-dom'\nimport { RouteComponentProps } from 'react-router'\nimport jwt from './utils/jwt'\n\nimport Body, { Width } from './components/Body'\nimport Nav from './containers/Nav'\nimport Login from './containers/Login'\nimport Signup from './containers/Signup'\nimport Posts from './containers/Posts'\nimport Threads from './containers/Threads'\nimport NewThread from './containers/NewThread'\n\nimport Profile from './containers/Profile'\nimport User from './containers/User'\nimport Messages from './containers/Messages'\nimport Forum from './containers/Forum'\nimport Stats from './containers/Stats'\n\n\nclass App extends React.Component<RouteComponentProps> {\n  componentDidUpdate(prevProps: RouteComponentProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <Route path=\"/\" component={Nav} />\n\n        <Body>\n          <Switch>\n            <Route exact path=\"/\" component={Forum} />\n            <Route exact path=\"/threads/new\" component={NewThread} />\n\n            <Route exact path=\"/threads/:id\" render={({ match }) =>\n              <Threads id={Number(match.params.id)} />\n            }/>\n\n            <Route exact path=\"/messages\" render={({ match }) =>\n              <Messages />\n            }/>\n\n            <Route path=\"/messages/:username\" render={({ match }) =>\n              <Messages username={match.params.username} />\n            }/>\n\n\n            <Route path=\"/posts/:id\" render={({ match }) =>\n              <Posts id={Number(match.params.id)} />\n            }/>\n\n            <Route path=\"/users/:username\" render={({ match }) =>\n              <User username={match.params.username} />\n            }/>\n\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/stats\" component={Stats} />\n\n          </Switch>\n        </Body>\n\n        <footer style={{ fontSize: '11px', padding: '10px 0'}}>\n          <Width>(c) 2019 FriendWorld.social</Width>\n        </footer>\n      </main>\n    )\n  }\n}\n\n\n\n\nexport default withRouter(App)\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider, createClient } from 'urql';\nimport App from './App';\nimport jwt from './utils/jwt'\n\nconst isProd = process.env.NODE_ENV === 'production'\nconst client = createClient({\n  url: isProd\n    ? 'https://friendworld.appspot.com/graphql'\n    : 'http://localhost:5000/graphql',\n  fetchOptions: () => {\n    const jwtToken = jwt.get()\n    if (jwtToken) {\n      return {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      }\n    } else {\n      return {}\n    }\n  }\n})\n\nconst hours = new Date().getHours();\nif (hours < 5 || hours >= 22) document.body.className = 'nightmode';\n\nconst basename = isProd ? '/friendworld' : '/'\n\nReactDOM.render(\n  (\n    <Provider value={client}>\n      <Router basename={basename}>\n        <App />\n      </Router>\n    </Provider>\n  ),\n  document.getElementById('root')\n );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup\":\"styles_signup__1TBgB\",\"card\":\"styles_card__2i6Va\",\"inputs\":\"styles_inputs__2-zI-\",\"submitButton\":\"styles_submitButton__1RQ0F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1c7gy\",\"inner\":\"styles_inner__2Y1v5\",\"contentInput\":\"styles_contentInput__1FYQK\",\"submitButton\":\"styles_submitButton__F4S4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__kQFtS\",\"intro\":\"styles_intro__jn8Dm\",\"memberSince\":\"styles_memberSince__6_eN_\",\"content\":\"styles_content__2k8HI\",\"left\":\"styles_left__3RLgw\",\"right\":\"styles_right__1wvr3\",\"avatar\":\"styles_avatar__up-xt\",\"postContainer\":\"styles_postContainer__8sWw_\",\"recentPosts\":\"styles_recentPosts__2pfm9\",\"inputSection\":\"styles_inputSection__3flum\",\"contentInput\":\"styles_contentInput__1yKr9\",\"submitButton\":\"styles_submitButton__qntJH\",\"profile\":\"styles_profile__CnGcI\",\"buttonContainer\":\"styles_buttonContainer__21qge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"styles_login__1bddG\",\"card\":\"styles_card__342W-\",\"submitButton\":\"styles_submitButton__3gLIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3ZrW4\",\"content\":\"styles_content__mkpSL\",\"title\":\"styles_title__g_H6k\",\"links\":\"styles_links__1lT-N\",\"link\":\"styles_link__2r07p\",\"user\":\"styles_user__KXrwW\",\"circle\":\"styles_circle__3a6lQ\",\"label\":\"styles_label__3nbc0\",\"unread\":\"styles_unread__39lvg\",\"Unread\":\"styles_Unread__20_Xf\",\"Rotate\":\"styles_Rotate__Jr-hj\",\"dropdownPosition\":\"styles_dropdownPosition__RvAKI\",\"dropdown\":\"styles_dropdown__3tTva\",\"alert\":\"styles_alert__2nkwt\",\"alertDropdown\":\"styles_alertDropdown__28W3J\",\"noAlerts\":\"styles_noAlerts__aWfQ5\",\"userDropdown\":\"styles_userDropdown__3RMMv\",\"switchAccounts\":\"styles_switchAccounts__3Okr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"width\":\"styles_width__2uPjX\",\"body\":\"styles_body__3rj8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"styles_back__3PY0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ad\":\"styles_ad__tC5Qg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adContainer\":\"styles_adContainer__lMNuW\",\"label\":\"styles_label__2MmNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__hU_hQ\",\"messagesSection\":\"styles_messagesSection__2TjQW\",\"mobileContainer\":\"styles_mobileContainer__2EvvN\",\"desktopContainer\":\"styles_desktopContainer__hT0b1\",\"messagePanel\":\"styles_messagePanel__3ea8x\",\"sentMessages\":\"styles_sentMessages__-5hBn\",\"newMessageBox\":\"styles_newMessageBox__151Oc\",\"sendBox\":\"styles_sendBox__2qRGc\",\"submitButton\":\"styles_submitButton__3lvS8\",\"message\":\"styles_message__Ok6NK\",\"sender\":\"styles_sender__2ZGF9\",\"sidePanelContainer\":\"styles_sidePanelContainer__3Z_GC\",\"emptyUsers\":\"styles_emptyUsers__2F5wl\",\"sidePanel\":\"styles_sidePanel__2cb8A\",\"user\":\"styles_user__3s6J6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"x\":\"styles_x__2XNkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__2wl0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"styles_error__30xW5\"};"],"sourceRoot":""}