{"version":3,"sources":["containers/User/styles.module.scss","components/Post/styles.module.scss","containers/Threads/styles.module.scss","containers/Forum/styles.module.scss","containers/NewThread/styles.module.scss","components/Body/index.tsx","utils/useResponsive.ts","components/X/index.tsx","utils/keywords.ts","utils/parsers.ts","components/Img/index.tsx","utils/profanityFilter.ts","components/ParsedText.tsx","containers/Nav/Alerts.tsx","utils/jwt.ts","containers/Nav/User.tsx","containers/Nav/Dropdown.tsx","containers/Nav/index.tsx","components/DisplayError/index.tsx","components/Loading/index.tsx","containers/Login/index.tsx","containers/Signup/index.tsx","components/Post/index.tsx","containers/Posts/index.tsx","components/Ad/index.tsx","containers/AdContainer/index.tsx","components/TextInput/index.tsx","containers/Threads/index.tsx","containers/NewThread/index.tsx","containers/Profile/index.tsx","containers/User/index.tsx","containers/Messages/SidePanel.tsx","containers/Messages/MessagePanel.tsx","containers/Messages/NewMessagePanel.tsx","containers/Messages/index.tsx","containers/Forum/index.tsx","containers/Stats/index.tsx","containers/Onboarding/index.tsx","containers/DevAds/index.tsx","App.tsx","index.tsx","containers/Signup/styles.module.scss","components/TextInput/styles.module.scss","containers/Stats/styles.module.scss","containers/Profile/styles.module.scss","containers/Login/styles.module.scss","containers/AdContainer/styles.module.scss","containers/Nav/styles.module.scss","components/Body/styles.module.css","containers/Posts/styles.module.scss","components/Ad/styles.module.scss","containers/Onboarding/styles.module.scss","containers/Messages/styles.module.scss","components/X/styles.module.scss","components/Img/styles.module.scss","components/DisplayError/styles.module.scss"],"names":["module","exports","header","profile","intro","memberSince","sendMessage","content","left","right","avatar","postContainer","recentPosts","infoSection","uuid","post","threadLink","username","totalPosts","main","panel","panelContainer","userInfo","footer","postedAt","threadTitle","signup","disabled","back","addPost","adContainer","ad","threadContainer","startThread","quickLinks","info","threadPost","postLink","forum","input","sectionTitle","label","Width","_ref","children","props","Object","objectWithoutProperties","react","assign","className","styles","width","Body","_ref2","body","Body_Width","getSize","innerHeight","window","innerWidth","setEventListener","event","handler","addEventListener","removeEventListener","useResponsive","mobileWidth","_useState","useState","_useState2","slicedToArray","isMobile","setIsMobile","useEffect","wasMobile","isNowMobile","isDesktop","ringStyles","border","borderRadius","X","onClick","ring","x","style","gender","male","female","other","keywords","Set","concat","toConsumableArray","externalLinkTest","imageTest","userTest","hashtagTest","postTest","threadTest","isUsername","str","cleanFragment","match","isHashtag","isKeyword","has","toLowerCase","getUsernames","split","filter","map","f","getKeywords","getTags","tags","JSON","stringify","usernames","fragment","test","replace","RegExp","Img","url","alt","img","src","profanityFilter","each","motherfucker","fuck","shit"," dick ","bitch","cunt","cocksuck","cock","nigger","nigga"," fag ","faggot","tranny"," god ","goddamn","pussy","replaceTo","replaceFrom","imgStyle","maxHeight","parseFragment","isExternalLink","href","target","rel","userId","dirt","Link","to","hashtag","isPostRef","postId","isThreadRef","threadId","combineFragments","fragments","length","arr","lastFragment","slice","addIndex","i","key","parser","paragraph","reduce","ParsedText","Alerts","alerts","readAlert","react_default","a","createElement","Fragment","alert","id","components_X","link","AlertDropdown","onEmptyClick","alertDropdown","Alerts_Alerts","noAlerts","AlertCircle","_ref3","_cx","unread","cx","circle","defineProperty","unread1","unread2","unread3","unread4","JWT","getMapping","stored","localStorage","getItem","parse","__currentUser__","getTrackingToken","jwt","get","mapping","getCurrentUser","getInnactiveUserList","keys","setTrackingToken","existingToken","token","Date","now","Math","random","setItem","e","console","log","set","setCurrentUser","clearCurrentUser","logout","location","reload","UserDropdown","alternativeUsers","userDropdown","switchAccounts","switchUser","ELEMENT_ID","Dropdown","hide","hideDropdown","dropdown","document","getElementById","contains","currentUserQuery","readAlertMutation","NavBar","toggleDropdownVisible","currentUser","loading","title","links","Nav_SignedInMenu","Nav_SignedOutMenu","SignedInMenu","_useResponsive","maxWidth","overflow","user","backgroundImage","avatarUrl","Alerts_AlertCircle","SignedOutMenu","Nav","dropdownState","setDropdownState","_useQuery","useQuery","query","_useQuery2$","data","fetching","_useMutation","useMutation","_useMutation2","executeReadAlert","history","listen","container","Nav_NavBar","dropdownPosition","User_UserDropdown","Alerts_AlertDropdown","alertId","DisplayError","error","Loading","dots","setDots","interval","setInterval","clearInterval","loginMutation","Login","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","errorText","setErrorText","_useMutation2$","executeLogin","useMemo","login","jwtToken","card","components_DisplayError","components_Loading","name","placeholder","value","onChange","type","submitButton","preventDefault","signupMutation","Signup","passwordConfirm","setPasswordConfirm","_useState7","_useState8","executeSignup","displayErrorText","message","includes","inputs","Post","author","postStats","totalCount","createdAt","toISOString","thread","postQuery","Posts","variables","components_Post","Ad","noop","safeParse","obj","isObject","adQuery","useAds","n","arguments","undefined","ads","parsedAds","objectSpread","primaryTags","targetTags","trackingInfo","profileTags","allAds","viableAds","isGeneric","primaryAds","some","sampleSize","secondaryAds","shuffle","taggedAds","targetAds","remainingAds","filterAds","fetchingAds","AdContainer","executeLogAdClick","adWrapper","components_Ad","setTimeout","defaultPlaceholder","TextInput","buttonContent","inputStyle","onSubmit","setContent","submit","inner","contentInput","onKeyDown","keyCode","metaKey","threadQuery","AddPost","executeCreatePost","components_TextInput","_getTags","stickiedThreads","Threads","_useAds","posts","flatMap","p","isError","isLoading","isData","adIx","containers_AdContainer","showMobileAd","Threads_AddPost","NewThread","setTitle","response","executeCreateThread","createThread","newThread","height","toString","userProps","updateUserMutation","Profile","ProfileContent","goto","push","Redirect","getTrackingInfo","fields","genderWords","intersection","getGender","bio","job","interests","media","religion","politics","join","validDate","dateStr","validEmail","emailStr","wait","ms","Promise","res","setAvatarUrl","email","setEmail","setGender","birthday","setBirthday","_useState9","_useState10","setBio","_useState11","_useState12","setJob","_useState13","_useState14","setInterests","_useState15","websites","_useState16","setWebsites","_useState17","_useState18","setMedia","_useState19","_useState20","setReligion","_useState21","_useState22","setPolitics","_useState23","_useState24","submitted","setSubmitted","_useState25","_useState26","isFakeLoading","setIsFakeLoading","executeUpdateUser","bdayError","emailError","subheader","updateUser","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","all","stop","apply","this","buttonContainer","inputSection","InfoSection","User","margin","textAlign","date","toLocaleString","weekday","year","month","day","hour","minute","second","adClicks","User_InfoSection","messagesDataQuery","collectMessages","messages","_createdAt","uniqueSortedUsers","messageData","sent","received","Map","values","Array","from","entries","orderBy","reverse","m","SidePanel","messageNames","sidePanelContainer","sidePanel","emptyUsers","requestedUserQuery","createMessageMutation","MessagePanel","$sentMessages","useRef","messageToSend","setMessageToSend","_useQuery2","executeQuery","executeCreateMessage","callback","delay","savedCallback","current","useInterval","hidden","requestPolicy","memoized","requestedUser","scrollTop","scrollHeight","collectedMessages","sentMessages","sender","messagePanel","ref","sendBox","onKeyPress","toUsername","NewMessagePanel","newUser","setNewUser","then","newMessageBox","Messages","newMessage","setNewMessage","messagesSection","mobileContainer","desktopContainer","ThreadPost","userName","substring","latestPostTime","Forum","partitioned","threads","partition","padding","paddingBottom","marginBottom","Forum_ThreadPost","statsQuery","Stats","stats","sectionContainer","statSection","userStatsList","stat","postCount","userAdClicksList","Onboarding","onboarding","DevAds","App","prevProps","scrollTo","Route","path","component","components_Body","Switch","exact","render","containers_Threads","Number","params","containers_Messages","_ref4","containers_Posts","_ref5","containers_User","fontSize","React","withRouter","client","createClient","fetchOptions","headers","Authorization","trackingToken","hours","getHours","ReactDOM","urql_es","BrowserRouter","src_App","Unread","Rotate","Breathe"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,OAAA,uBAAAC,QAAA,wBAAAC,MAAA,sBAAAC,YAAA,4BAAAC,YAAA,4BAAAC,QAAA,wBAAAC,KAAA,qBAAAC,MAAA,sBAAAC,OAAA,uBAAAC,cAAA,8BAAAC,YAAA,4BAAAC,YAAA,4BAAAC,KAAA,gECAlBd,EAAAC,QAAA,CAAkBc,KAAA,qBAAAL,OAAA,uBAAAR,OAAA,uBAAAc,WAAA,2BAAAC,SAAA,yBAAAC,WAAA,2BAAAC,KAAA,qBAAAC,MAAA,sBAAAC,eAAA,+BAAAC,SAAA,yBAAAf,QAAA,wBAAAgB,OAAA,uBAAAC,SAAA,8CCAlBxB,EAAAC,QAAA,CAAkBwB,YAAA,4BAAAC,OAAA,uBAAAC,SAAA,yBAAAnB,KAAA,qBAAAoB,KAAA,qBAAAZ,WAAA,2BAAAa,QAAA,wBAAAC,YAAA,4BAAAC,GAAA,mBAAAC,gBAAA,qDCAlBhC,EAAAC,QAAA,CAAkBC,OAAA,uBAAA+B,YAAA,4BAAAC,WAAA,2BAAAC,KAAA,qBAAAC,WAAA,2BAAAC,SAAA,yBAAAC,MAAA,sBAAAR,YAAA,4BAAAtB,KAAA,0CCAlBR,EAAAC,QAAA,CAAkB2B,KAAA,qBAAAW,MAAA,sBAAAC,aAAA,6BAAAC,MAAA,sBAAAf,OAAA,uBAAAC,SAAA,6NCOLe,EAA0B,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAaC,EAAhBC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,qBACrCK,EAAA,oBAAAF,OAAAG,OAAA,CAAKC,UAAWC,IAAOC,OAAWP,GAC/BD,IAUUS,EANgB,SAAAC,GAAA,IAAGV,EAAHU,EAAGV,SAAH,OAC7BI,EAAA,qBAAKE,UAAWC,IAAOI,MACrBP,EAAA,cAACQ,EAAD,KAAQZ,sCCTNa,EAAU,iBAAmB,CACjCC,YAAaC,OAAOD,YACpBE,WAAYD,OAAOC,aAIfC,EAAmB,SAACC,EAAeC,GAAhB,OAAmC,WAE1D,OADAJ,OAAOK,iBAAiBF,EAAOC,GACxB,kBAAMJ,OAAOM,oBAAoBH,EAAOC,MAIlC,SAASG,EAAcC,GAAqB,IAAAC,EACzBC,mBAAkBZ,IAAUG,YAAcO,GADjBG,EAAAxB,OAAAyB,EAAA,EAAAzB,CAAAsB,EAAA,GAClDI,EADkDF,EAAA,GACxCG,EADwCH,EAAA,GAWzD,OARAI,oBAAUb,EAAiB,SAAU,WACnC,IAAMc,EAAYH,EACZI,EAAcnB,IAAUG,YAAcO,EACxCQ,IAAcC,GAChBH,EAAYG,MAIT,CACLJ,WACAK,WAAYL,gDCxBVM,EAAa,CAAEC,OAAQ,YAAaC,aAAc,QAWzCC,EAVc,SAAAtC,GAAA,IAAGuC,EAAHvC,EAAGuC,QAASC,EAAZxC,EAAYwC,KAAZ,OAC3BnC,EAAA,sBACEE,UAAWC,IAAOiC,EAClBC,MAAOF,EAAOL,EAAa,GAC3BI,QAASA,GAHX,aC0JWI,EAAS,CACpBC,KAAM,CACJ,MACA,OACA,IACA,MACA,MACA,IACA,OACA,MACA,QACA,OACA,QAEFC,OAAQ,CACN,QACA,SACA,IACA,OACA,IACA,MACA,QACA,QACA,UAEFC,MAAO,CACL,cACA,aACA,QACA,IACA,iBACA,gBACA,cACA,UACA,gBAMWC,EAAA,IAAIC,IAAJ,GAAAC,OA5MS,CACtB,WACA,oBACA,uBACA,mBACA,aACA,QACA,OACA,OACA,QACA,OACA,SACA,SACA,UACA,SACA,iBACA,UACA,MACA,WACA,MACA,SACA,YACA,UACA,MACA,UACA,cACA,cACA,aACA,UACA,UACA,QACA,UAGiB,CACjB,MACA,SACA,eACA,MACA,SACA,UACA,QACA,aACA,UACA,QACA,SACA,WACA,SACA,UACA,YACA,SACA,QACA,UACA,QACA,SACA,YACA,UAG0B,CAC1B,MACA,YACA,aACA,UACA,UACA,aACA,YACA,aACA,QACA,SACA,QACA,UACA,WACA,MACA,WACA,SACA,OACA,YACA,MACA,kBAGsB,CACtB,WACA,YACA,aACA,QACA,YACA,cACA,MACA,UACA,WACA,eACA,gBACA,WACA,QACA,OACA,QACA,UACA,OACA,eACA,MACA,UACA,UACA,YACA,YACA,WACA,OACA,WACA,MACA,OACA,SACA,UACA,WACA,SACA,QACA,SACA,eACA,oBAyBqB,CACrB,UACA,OACA,MACA,QAC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","file":"static/js/main.1d9b0d43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2wLxh\",\"profile\":\"styles_profile__31rzl\",\"intro\":\"styles_intro__1X3Y3\",\"memberSince\":\"styles_memberSince__1jhAK\",\"sendMessage\":\"styles_sendMessage__3284j\",\"content\":\"styles_content__1_9jW\",\"left\":\"styles_left__vhBr7\",\"right\":\"styles_right__1-xIl\",\"avatar\":\"styles_avatar__1sUtC\",\"postContainer\":\"styles_postContainer__35feo\",\"recentPosts\":\"styles_recentPosts__1aAFm\",\"infoSection\":\"styles_infoSection__2k3k7\",\"uuid\":\"styles_uuid__36WGZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"styles_post__2wjTj\",\"avatar\":\"styles_avatar__2GJc8\",\"header\":\"styles_header__19BhD\",\"threadLink\":\"styles_threadLink__3x7tb\",\"username\":\"styles_username__2fJ1r\",\"totalPosts\":\"styles_totalPosts__1YOIB\",\"main\":\"styles_main__TKFmC\",\"panel\":\"styles_panel__3ULdb\",\"panelContainer\":\"styles_panelContainer__2nRTc\",\"userInfo\":\"styles_userInfo__3SK-L\",\"content\":\"styles_content__2Ru5-\",\"footer\":\"styles_footer__dMb2p\",\"postedAt\":\"styles_postedAt__9cLJi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"threadTitle\":\"styles_threadTitle__nzF4M\",\"signup\":\"styles_signup__2AxnY\",\"disabled\":\"styles_disabled__1TmJj\",\"left\":\"styles_left__1P-Yx\",\"back\":\"styles_back__2jFxT\",\"threadLink\":\"styles_threadLink__1hkCr\",\"addPost\":\"styles_addPost__1-izz\",\"adContainer\":\"styles_adContainer__2ZcDv\",\"ad\":\"styles_ad__36g-4\",\"threadContainer\":\"styles_threadContainer__22gH-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__VUeZN\",\"startThread\":\"styles_startThread__2DdKA\",\"quickLinks\":\"styles_quickLinks__cJQge\",\"info\":\"styles_info__2f1QB\",\"threadPost\":\"styles_threadPost__3SWHg\",\"postLink\":\"styles_postLink__2yHjb\",\"forum\":\"styles_forum__AVThT\",\"adContainer\":\"styles_adContainer__3zUCc\",\"left\":\"styles_left__2_RIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"styles_back__3iTuS\",\"input\":\"styles_input__rHUWj\",\"sectionTitle\":\"styles_sectionTitle__2wqKD\",\"label\":\"styles_label___0hEN\",\"signup\":\"styles_signup__34diQ\",\"disabled\":\"styles_disabled__3WJTC\"};","import * as React from 'react';\nimport styles from './styles.module.css';\n\ninterface Props {\n  children: any,\n  [prop: string]: any\n}\n\nexport const Width: React.SFC<Props> = ({ children, ...props }) => (\n  <div className={styles.width} {...props}>\n    {children}\n  </div>\n)\n\nconst Body: React.SFC<Props> = ({ children }) => (\n  <div className={styles.body}>\n    <Width>{children}</Width>\n  </div>\n)\n\nexport default Body\n\n","import { useState, useEffect } from 'react'\n\ntype WindowSize = {\n  innerHeight: number\n  innerWidth: number\n}\n\nconst getSize = (): WindowSize => ({\n  innerHeight: window.innerHeight,\n  innerWidth: window.innerWidth,\n})\n\ntype AnyFn = (a: any) => any\nconst setEventListener = (event: string, handler: AnyFn) => () => {\n  window.addEventListener(event, handler)\n  return () => window.removeEventListener(event, handler)\n}\n\n\nexport default function useResponsive(mobileWidth: number) {\n  const [isMobile, setIsMobile] = useState<boolean>(getSize().innerWidth <= mobileWidth)\n\n  useEffect(setEventListener('resize', () => {\n    const wasMobile = isMobile\n    const isNowMobile = getSize().innerWidth <= mobileWidth\n    if (wasMobile !== isNowMobile) {\n      setIsMobile(isNowMobile)\n    }\n  }))\n\n  return {\n    isMobile,\n    isDesktop: !isMobile\n  }\n}\n","import * as React from 'react';\nimport styles from './styles.module.scss';\n\ntype XProps = {\n  onClick?: any,\n  ring?: boolean\n}\n\nconst ringStyles = { border: '1px solid', borderRadius: '100%' }\nconst X: React.SFC<XProps> = ({ onClick, ring }) => (\n  <span\n    className={styles.x}\n    style={ring ? ringStyles : {}}\n    onClick={onClick}\n  >\n    x\n  </span>\n)\n\nexport default X\n","export const fastcash = [\n  \"fastcash\",\n  \"fastcashmoneyplus\",\n  \"fastcashmoneyplusbiz\",\n  \"fastcashmoneybiz\",\n  \"moneybucks\",\n  \"bucks\",\n  \"fast\",\n  \"cash\",\n  \"money\",\n  \"rich\",\n  \"wealth\",\n  \"saving\",\n  \"savings\",\n  \"crypto\",\n  \"cryptocurrency\",\n  \"bitcoin\",\n  \"btc\",\n  \"ethereum\",\n  \"eth\",\n  \"invest\",\n  \"investing\",\n  \"finance\",\n  \"ico\",\n  \"fortune\",\n  \"millionaire\",\n  \"billionaire\",\n  \"blockchain\",\n  \"economy\",\n  \"payment\",\n  \"trick\",\n  \"profit\",\n]\n\nexport const woo = [\n  \"woo\",\n  \"spirit\",\n  \"spirituality\",\n  \"god\",\n  \"chakra\",\n  \"chakras\",\n  \"sound\",\n  \"meditation\",\n  \"reality\",\n  \"dream\",\n  \"dreams\",\n  \"hypnosis\",\n  \"mantra\",\n  \"mantras\",\n  \"technique\",\n  \"energy\",\n  \"karma\",\n  \"cleanse\",\n  \"vegan\",\n  \"ascend\",\n  \"ascension\",\n  \"newage\",\n]\n\nexport const mentalHealth = [\n  \"sad\",\n  \"depressed\",\n  \"melencholy\",\n  \"anxious\",\n  \"anxiety\",\n  \"depression\",\n  \"anhedonia\",\n  \"motivation\",\n  \"happy\",\n  \"mental\",\n  \"brain\",\n  \"suicide\",\n  \"suicidal\",\n  \"ocd\",\n  \"obsessed\",\n  \"scared\",\n  \"fear\",\n  \"emptiness\",\n  \"cbd\",\n  \"antidepressant\"\n]\n\nexport const politics = [\n  \"politics\",\n  \"political\",\n  \"government\",\n  \"taxes\",\n  \"democrats\",\n  \"republicans\",\n  \"gop\",\n  \"liberal\",\n  \"liberals\",\n  \"conservative\",\n  \"conservatives\",\n  \"libtards\",\n  \"cucks\",\n  \"cuck\",\n  \"trump\",\n  \"clinton\",\n  \"jews\",\n  \"rockefellers\",\n  \"jfk\",\n  \"fascism\",\n  \"fascist\",\n  \"socialist\",\n  \"socialism\",\n  \"abortion\",\n  \"guns\",\n  \"shillary\",\n  \"sjw\",\n  \"sjws\",\n  \"social\",\n  \"justice\",\n  \"warriors\",\n  \"global\",\n  \"china\",\n  \"russia\",\n  \"fakebullshit\",\n  \"fakebullshitnews\",\n]\n\nexport const conspiracy = [\n  \"ti\",\n  \"targeted\",\n  \"target\",\n  \"tracking\",\n  \"conspiracy\",\n  \"nuclear\",\n  \"drone\",\n  \"5g\",\n  \"radiation\",\n  \"alien\",\n  \"aliens\",\n  \"ufo\",\n  \"ufos\",\n  \"roswell\",\n  \"brain\",\n  \"mind-control\",\n  \"chemtrails\",\n  \"tracking\",\n\n]\n\nexport const general = [\n  \"achieve\",\n  \"love\",\n  \"sex\",\n  \"greed\",\n  \"power\",\n  \"pizza\",\n  \"hammers\",\n  \"soap\",\n  \"puppies\",\n  \"cats\",\n  \"friendworld\",\n  \"friendworldsocial\",\n  \"trains\",\n  \"subway\",\n  \"food\",\n  \"candy\",\n  \"family\"\n\n]\n\nexport const gender = {\n  male: [\n    'man',\n    'male',\n    'm',\n    'boy',\n    'guy',\n    'b',\n    'dude',\n    'bro',\n    'penis',\n    'dick',\n    'cock',\n  ],\n  female: [\n    'woman',\n    'female',\n    'f',\n    'girl',\n    'g',\n    'gal',\n    'broad',\n    'bitch',\n    'vagina'\n  ],\n  other: [\n    'transgender',\n    'transexual',\n    'trans',\n    't',\n    'transmasculine',\n    'transfeminine',\n    'intergender',\n    'agender',\n    'androgynous'\n  ]\n}\n\nconst imFuckingLazy = [\"fastcash\",\"fastcashmoneyplus\",\"fastcashmoneyplusbiz\",\"fastcashmoneybiz\",\"moneybucks\",\"bucks\",\"fast\",\"cash\",\"money\",\"rich\",\"wealth\",\"saving\",\"savings\",\"crypto\",\"cryptocurrency\",\"bitcoin\",\"btc\",\"ethereum\",\"eth\",\"invest\",\"investing\",\"finance\",\"ico\",\"fortune\",\"millionaire\",\"billionaire\",\"blockchain\",\"economy\",\"payment\",\"trick\",\"profit\",\"throwing\",\"economic\",\"explosion\",\"market\",\"comfort\",\"home\",\"house\",\"apartment\",\"success\",\"food\",\"taste\",\"suit\",\"dream\",\"dreams\",\"sleep\",\"pillow\",\"weird\",\"family\",\"vortex\",\"hillary\",\"clinton\",\"politics\",\"political\",\"government\",\"democrats\",\"republicans\",\"gop\",\"liberal\",\"liberals\",\"conservative\",\"conservatives\",\"libtards\",\"cucks\",\"cuck\",\"socialist\",\"socialism\",\"shillary\",\"sjw\",\"sjws\",\"social\",\"justice\",\"warriors\",\"science\",\"chemicals\",\"chemtrails\",\"target\",\"targeted\",\"targeting\",\"woo\",\"cleanse\",\"spirit\",\"mental\",\"spirituality\",\"god\",\"chakra\",\"chakras\",\"sound\",\"meditation\",\"reality\",\"hypnosis\",\"mantra\",\"mantras\",\"technique\",\"energy\",\"karma\",\"vegan\",\"ascend\",\"ascension\",\"newage\",\"consciousness\",\"ti\",\"individual\",\"tracking\",\"conspiracy\",\"nuclear\",\"drone\",\"5g\",\"radiation\",\"alien\",\"aliens\",\"ufo\",\"ufos\",\"roswell\",\"brain\",\"mind-control\",\"sad\",\"depressed\",\"melencholy\",\"anxious\",\"anxiety\",\"depression\",\"anhedonia\",\"motivation\",\"happy\",\"suicide\",\"suicidal\",\"ocd\",\"obsessed\",\"scared\",\"fear\",\"emptiness\",\"cbd\",\"antidepressant\",\"addicted\",\"addicting\",\"addiction\",\"internet\",\"evacuate\",\"planet\",\"wrong\",\"psychology\",\"remember\",\"forget\",\"forgetting\",\"foot\",\"death\",\"toenail\",\"nail\",\"fungus\",\"feet\",\"elderly\",\"back\",\"pain\",\"organ\",\"organs\",\"accupuncture\",\"intestine\",\"liver\",\"heart\",\"male\",\"man\",\"testosterone\",\"hair\",\"loss\",\"bald\",\"balding\",\"woman\",\"female\",\"fat\",\"skinny\",\"pepper\",\"hot\",\"furnace\",\"drip\",\"cancer\",\"stop\",\"dead\",\"blood\",\"cells\",\"add\",\"indigo\",\"child\",\"children\",\"special\",\"collective\",\"illuminati\",\"holocaust\",\"internet-of-things\",\"iot\",\"vr\",\"virtual\",\"individuality\",\"jew\",\"jews\",\"jewish\",\"semetic\",\"subliminal\",\"astral\",\"projection\",\"light\",\"healing\",\"luck\",\"clover\",\"horseshoe\",\"sexy\",\"binaural\",\"beats\",\"music\",\"sperm\",\"seamen\",\"sex\",\"digital\",\"hologram\",\"simulation\",\"illusion\",\"numbers\",\"numeric\",\"dna\",\"information\",\"funny\",\"laugh\",\"laughing\",\"lol\",\"haha\",\"kitty\",\"kitten\",\"cat\",\"meow\",\"virus\",\"infected\",\"pleiadians\",\"space\",\"physics\",\"bunker\",\"atlas\",\"nuke\",\"war\",\"disaster\",\"apocalypse\",\"bomb\",\"survival\",\"shelter\",\"girl\",\"doctor\",\"bowels\",\"shit\",\"poop\",\"constipated\",\"octopus\",\"puzzle\",\"stimulation\",\"electrode\",\"dbs\",\"deep\",\"therapy\",\"scanners\",\"scanner\",\"tracker\",\"beauty\",\"ugly\",\"surgery\",\"plastic\",\"constipation\",\"constipate\",\"poo\",\"darpa\",\"mind\",\"control\",\"pot\",\"weed\",\"drugs\",\"marijuana\",\"seduction\",\"dating\",\"romance\",\"singles\",\"chess\",\"666\",\"2016\",\"freemasonry\",\"universal\",\"emperor\",\"42\",\"miracle\",\"hell\",\"genesis\",\"bread\",\"jesus\",\"christianity\",\"sandwich\",\"bible\",\"safe\",\"safety\",\"spyware\",\"malware\",\"security\",\"towers\",\"smartphone\",\"weaponized\",\"thoughts\",\"cognitive\",\"knowledge\",\"processing\",\"radio\",\"transmission\",\"nsa\",\"microwave\",\"frequency\",\"nwo\",\"new\",\"world\",\"order\",\"state\",\"corruption\",\"x-ray\",\"skull\",\"dopamine\",\"driving\",\"muscle\",\"work\",\"hate\",\"emf\",\"electromagnetic\",\"relationship\",\"cocreate\",\"relationships\",\"electo\",\"magnetic\",\"intuition\",\"soul\",\"dreaming\",\"lucid\",\"suffering\",\"jewelry\",\"electric\",\"buddha\",\"moon\",\"christ\",\"blessing\",\"buddhism\",\"harmony\",\"harmonics\",\"spiritual\",\"unarius\",\"venus\",\"mars\",\"water\",\"hydrogen\",\"ion\",\"acidic\",\"alkaline\",\"radicals\",\"health\",\"h20\",\"infinity\",\"oasis\",\"ph\",\"teeth\",\"tooth\",\"dental\",\"dentist\",\"implants\",\"implant\",\"cavity\",\"mouth\",\"gums\",\"dentures\",\"weight\",\"quantum\",\"motivaitonal\",\"phobia\"]\n\nexport default new Set([\n  ...fastcash,\n  ...woo,\n  ...mentalHealth,\n  ...politics,\n  ...general,\n  ...conspiracy,\n  ...gender.male,\n  ...gender.female,\n  ...gender.other,\n  ...imFuckingLazy,\n])\n","import keywords, { gender } from './keywords'\nimport intersection from 'lodash/intersection'\n\nconst externalLinkTest = /^(http|https):\\/\\/.+\\..+/\nconst imageTest = /(\\.jpg$)|(\\.jpeg$)|(\\.png$)|(\\.gif$)|(\\.svg$)/\nconst userTest = /^@.+/\nconst hashtagTest = /^#.+/\nconst postTest = /^\\/posts\\/.+/\nconst threadTest = /^\\/threads\\/.+/\n\nexport function isImage(str: string) {\n  str = cleanFragment(str)\n  return str.match(imageTest) && str.match(externalLinkTest)\n}\n\nexport function isExternalLink(str: string) {\n  str = cleanFragment(str)\n  return str.match(externalLinkTest)\n}\n\nexport function isUsername(str: string) {\n  str = cleanFragment(str)\n  return str.match(userTest);\n}\n\nexport function isHashtag(str: string) {\n  str = cleanFragment(str)\n  return str.match(hashtagTest)\n}\n\nexport function isPostRef(str: string) {\n  str = cleanFragment(str)\n  return str.match(postTest)\n}\n\nexport function isThreadRef(str: string) {\n  str = cleanFragment(str)\n  return str.match(threadTest)\n}\n\nexport function isKeyword(str: string) {\n  return keywords.has(cleanFragment(str.toLowerCase()))\n}\n\nexport function hasNewline(str: string) {\n  return str.match('\\n')\n}\n\nexport function getUsernames(str: string) {\n  return str\n    .split(' ')\n    .filter(isUsername)\n    .map(f => cleanFragment(f, /^@/))\n}\n\nexport function getHastags(str: string) {\n  return str\n    .split(' ')\n    .filter(isHashtag)\n    .map(f => cleanFragment(f, /^#/).toLowerCase())\n}\n\nexport function getKeywords(str: string) {\n  return str\n    .split(' ')\n    .map(f => cleanFragment(f).toLowerCase())\n    .filter(isKeyword)\n}\n\nexport function getGender(str: string) {\n  const genderWords = str\n    .split(' ')\n    .map(f => cleanFragment(f).toLowerCase())\n\n  if (intersection(genderWords, gender.male).length) return 'male'\n  else if (intersection(genderWords, gender.female).length) return 'female'\n  else return 'other'\n}\n\n\nexport function getTags(content: string) {\n  return {\n    tags: JSON.stringify(getHastags(content).concat(getKeywords(content))),\n    usernames: JSON.stringify(getUsernames(content))\n  }\n}\n\nexport function cleanFragment(fragment: string, test?: RegExp) {\n  return fragment\n    .replace(test ? new RegExp(test, 'g') : '', '')\n    .replace(/(\\.|\\?|!|:|;|,|'|\")+$/, '')\n}\n\n","import * as React from 'react'\nimport styles from './styles.module.scss'\n\ntype Props = {\n  url: string,\n  alt: string,\n  [props: string]: unknown\n}\nexport default function Img({ url, alt, ...props }: Props) {\n  return <img className={styles.img} src={url} alt={alt} {...props} />\n}\n","\nimport each from 'lodash/each'\n\nexport default function profanityFilter (input: string): string {\n  const swap: any = {\n    motherfucker: 'm0therf_cker',\n    fuck: 'f_ck',\n\n    shit: 'poo',\n    ' dick ': 'penis',\n    bitch: 'b!tch',\n\n    cunt: 'c%nt',\n    cocksuck: 'c*cks^ck',\n    cock: 'c*ck',\n\n    nigger: 'african-american',\n    nigga: 'pal',\n\n    ' fag ': 'homosexual',\n    faggot: 'homosexual',\n\n    tranny: 'transexual',\n    ' god ': 'g-d',\n    goddamn: 'goshdarn',\n\n    pussy: 'p#ssy'\n  }\n\n  each(swap, (replaceTo, replaceFrom) => {\n    input = input.replace(replaceFrom, replaceTo)\n  })\n\n\n  return input\n}\n","import * as React from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  isExternalLink,\n  isImage,\n  isHashtag,\n  isUsername,\n  isPostRef,\n  isThreadRef,\n  // hasNewline,\n  cleanFragment,\n} from 'utils/parsers'\nimport Img from './Img'\nimport profanityFilter from 'utils/profanityFilter'\n\n\ntype Fragment = string | React.ReactNode;\n\nconst last = (arr: Array<Fragment>): Fragment => arr[arr.length - 1]\n\nconst imgStyle = {\n  maxHeight: 300,\n}\nconst parseFragment = (fragment: string): Fragment => {\n  if (isImage(fragment)) {\n    return <Img url={fragment} style={imgStyle} alt=\"user posted content\"/>\n\n  } else if (isExternalLink(fragment)) {\n    return <a href={cleanFragment(fragment)} target=\"_blank\" rel=\"noopener noreferrer\">{fragment}</a>\n\n  } else if (isUsername(fragment)) {\n    const userId = cleanFragment(fragment, /^@/)\n    const dirt = fragment.replace(userId, '').replace(/^@/, '')\n    return <><Link to={`/users/${userId}`}>@{profanityFilter(userId)}</Link>{dirt}</>\n\n  } else if (isHashtag(fragment)) {\n    const hashtag = cleanFragment(fragment, /^#/)\n    const dirt = fragment.replace(hashtag, '').replace(/^#/, '')\n    return <><Link to={`/hashtag/${hashtag.toLowerCase()}`}>#{profanityFilter(hashtag)}</Link>{dirt}</>\n\n  } else if (isPostRef(fragment)) {\n    const postId = cleanFragment(fragment, /^\\/posts\\//)\n    const dirt = fragment.replace(postId, '').replace(/^\\/posts\\//, '')\n    return <><Link to={`/posts/${postId}`}>/posts/{postId}</Link>{dirt}</>\n\n  } else if (isThreadRef(fragment)) {\n    const threadId = cleanFragment(fragment, /^\\/threads\\//)\n    const dirt = fragment.replace(threadId, '').replace(/^\\/threads\\//, '')\n    return <><Link to={`/threads/${threadId}`}>/threads/{threadId}</Link>{dirt}</>\n\n  } else {\n    return profanityFilter(fragment)\n  }\n}\n\n\nconst combineFragments = (fragments: Array<Fragment>, fragment: Fragment): Array<Fragment> => {\n  if (!fragments.length) {\n    return [fragment]\n  }\n\n  const lastFragment = last(fragments)\n\n  if (typeof lastFragment === 'string' && typeof fragment === 'string') {\n    return [...fragments.slice(0, -1), lastFragment + ' ' + fragment]\n\n  } else if (typeof lastFragment === 'string') {\n    return [...fragments.slice(0, -1), lastFragment + ' ', fragment]\n\n  } else {\n    return [...fragments, ' ', fragment]\n  }\n}\n\nconst addIndex = (f: React.ReactNode, i: number) => (\n  <React.Fragment key={i}>\n    {f}\n  </React.Fragment>\n)\n\nconst parser = (content: string) => content\n  .split('\\n')\n  .map((paragraph, i) => (\n    <p key={i}>\n      {paragraph\n        .split(' ')\n        .map(parseFragment)\n        .reduce(combineFragments, [])\n        .map(addIndex)\n      }\n    </p>\n  ))\n\ntype Props = { content: string };\n\nexport default function ParsedText({ content }: Props) {\n  return (\n    <>\n      {parser(content)}\n    </>\n  )\n}\n","import React  from 'react'\nimport { Link } from 'react-router-dom'\nimport cx from 'classnames'\n\nimport X from 'components/X'\nimport ParsedText from 'components/ParsedText'\nimport styles from './styles.module.scss'\nimport { CurrentUser } from './index'\n\ntype AlertDropdownProps = {\n  alerts: CurrentUser['alerts'],\n  readAlert: (id: string) => unknown\n  onEmptyClick?: (a: any) => any\n}\n\nconst Alerts = ({ alerts, readAlert }: AlertDropdownProps) => {\n  return (<>\n    {alerts.map(alert =>\n      <div key={alert.id} className={styles.alert} onClick={() => readAlert(alert.id)}>\n        <X ring />\n        {alert.link\n          ? <Link to={alert.link}>{alert.content}</Link>\n          : <ParsedText content={alert.content} />\n        }\n      </div>\n    )}\n  </>)\n\n\n}\n\nexport const AlertDropdown: React.SFC<AlertDropdownProps> = ({ alerts, onEmptyClick, readAlert }) => (\n  <div className={styles.alertDropdown}>\n    {alerts.length\n      ? <Alerts alerts={alerts} readAlert={readAlert} />\n      : <div className={styles.noAlerts} onClick={onEmptyClick}>No Alerts!</div>\n    }\n  </div>\n)\n\nexport const AlertCircle: React.SFC<{ unread: number }> = ({ unread }) => (\n  <div className={cx(styles.circle, {\n    [styles.unread]: unread,\n    [styles.unread1]: unread > 0 && unread < 5,\n    [styles.unread2]: unread >= 5 && unread < 10,\n    [styles.unread3]: unread >= 10 && unread < 15,\n    [styles.unread4]: unread >= 15,\n  })}>\n    {unread || 0}\n  </div>\n)\n","const JWT = '__JWT__'\n\ntype JwtMap = {\n  __currentUser__: string,\n  [username: string]: string\n}\n\ntype JwtUser = {\n  username: string,\n  jwt: string\n}\n\nconst getMapping = (): JwtMap => {\n  const stored = localStorage.getItem(JWT)\n  return stored ? JSON.parse(stored) : { __currentUser__: '' }\n}\n\nconst get = (): string| void => {\n  const mapping = getMapping()\n  return mapping[mapping.__currentUser__]\n}\n\nconst getInnactiveUserList = (): Array<JwtUser> => {\n  const mapping = getMapping()\n  return Object.keys(mapping)\n    .filter(username => (username !== '__currentUser__' && username !== mapping.__currentUser__))\n    .map(username => ({\n      username, jwt: mapping[username]\n    }))\n}\n\nconst getCurrentUser = (): JwtUser => {\n  const mapping = getMapping()\n  return {\n    username: mapping.__currentUser__,\n    jwt: mapping[mapping.__currentUser__]\n  }\n}\n\nconst set = (username: string, jwt: string): void => {\n  const mapping = getMapping()\n  mapping[username] = jwt\n  localStorage.setItem(JWT, JSON.stringify(mapping))\n}\n\nconst setCurrentUser = (username: string) => {\n  const mapping = getMapping()\n  mapping.__currentUser__ = username\n  localStorage.setItem(JWT, JSON.stringify(mapping))\n}\n\nconst clearCurrentUser = () => {\n  const mapping = getMapping()\n  mapping.__currentUser__ = ''\n  localStorage.setItem(JWT, JSON.stringify(mapping))\n}\n\nconst TRACKING_TOKEN = '__TRACKING_TOKEN__'\nconst setTrackingToken = () => {\n  try {\n    const existingToken = getTrackingToken()\n    if (!existingToken) {\n      const token = `${Date.now()}-${Math.random()}`\n      localStorage.setItem(TRACKING_TOKEN, token)\n      return token\n    } else {\n      return existingToken\n    }\n\n  } catch(e) {\n    console.log('could not set trakcing token: ', e)\n  }\n}\n\nconst getTrackingToken = (): string => localStorage.getItem(TRACKING_TOKEN) || ''\n\nexport default {\n  get,\n  getCurrentUser,\n  getInnactiveUserList,\n  getTrackingToken,\n  setTrackingToken,\n  set,\n  setCurrentUser,\n  clearCurrentUser\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport jwt from 'utils/jwt'\nimport styles from './styles.module.scss'\n\nconst switchUser = (username: string) => {\n  jwt.setCurrentUser(username)\n  window.location.reload()\n}\n\nconst logout = () => {\n  jwt.clearCurrentUser()\n  window.location.reload()\n}\n\nexport const UserDropdown: React.SFC<{}> = () => {\n  const alternativeUsers = jwt.getInnactiveUserList()\n\n  return (\n    <ul className={styles.userDropdown}>\n      <a href=\"#logout\" onClick={logout}>\n        <li>Logout</li>\n      </a>\n\n      <Link to=\"/messages\">\n        <li>\n          <div>Messages</div>\n        </li>\n      </Link>\n\n      <Link to=\"/profile\">\n        <li>\n          <div>Update Profile</div>\n        </li>\n      </Link>\n\n      <Link to=\"/signup\">\n        <li>\n          <div>Create Account</div>\n        </li>\n      </Link>\n\n      {!!alternativeUsers.length &&\n        <div className={styles.switchAccounts}>\n          <strong>Switch Account</strong>\n          <ul>\n            {alternativeUsers.map(({ username }) => (\n              <li\n                key={username}\n                onClick={() => switchUser(username)}\n              >\n                {username}\n              </li>\n             ))}\n          </ul>\n        </div>\n      }\n    </ul>\n  )\n}\n","import React, { useEffect } from 'react'\nimport cx from 'classnames'\nimport styles from './styles.module.scss'\n\n\ntype Props = {\n  hide: Function,\n  children: any\n}\n\nconst ELEMENT_ID = '__dropdown_component__'\n\nexport default function Dropdown({ children, hide }: Props) {\n  const hideDropdown = (e: any) => {\n    const dropdown = document.getElementById(ELEMENT_ID)\n    if (dropdown && e.target !== dropdown && !dropdown.contains(e.target)) {\n      hide()\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', hideDropdown)\n    return () => document.removeEventListener('click', hideDropdown)\n  })\n\n  return (\n    <div id={ELEMENT_ID} className={cx(styles.dropdown, 'solid')}>\n      {children}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport cx from 'classnames'\nimport { useQuery, useMutation } from 'urql'\nimport useResponsive from 'utils/useResponsive'\n\n\nimport styles from './styles.module.scss'\nimport { Width } from 'components/Body'\n\nimport { AlertDropdown, AlertCircle } from './Alerts'\nimport { UserDropdown } from './User'\nimport Dropdown from './Dropdown'\n\nimport { RouteChildrenProps } from 'react-router'\n\nexport type CurrentUser = {\n    id: string,\n    username: string,\n    avatarUrl?: string\n    alerts: Array<{\n      id: string\n      content: string\n      link?: string\n    }>\n  }\nexport type CurrentUserQuery = {\n  currentUser?: CurrentUser\n}\n\nconst currentUserQuery = `{\n  currentUser {\n    id\n    username\n    avatarUrl\n    alerts: alertsList (condition: { read: false }) {\n      id\n      content\n      link\n    }\n  }\n}`\n\ntype ReadAlertInput = {\n  input: {\n    alertId: string\n  }\n}\n\ntype ReadAlertResponse = {\n  readAlert: {\n    alert: {\n      id: string,\n      read: boolean\n    }\n  }\n}\n\nconst readAlertMutation = `\nmutation readAlert($input: ReadAlertInput!) {\n  readAlert(input: $input) {\n    alert {\n      id\n      read\n    }\n  }\n}`\n\nexport type Props = RouteChildrenProps\n\nexport type State = {\n  dropdownState: null | 'users' | 'alerts'\n}\n\nfunction Nav(props: Props) {\n  const [dropdownState, setDropdownState] = useState<State['dropdownState']>(null)\n  const [{ data, fetching }] = useQuery<CurrentUserQuery>({ query: currentUserQuery })\n  const [response, executeReadAlert] = useMutation<ReadAlertResponse, ReadAlertInput>(readAlertMutation) // eslint-disable-line\n  const currentUser = (data && data.currentUser) || null\n\n  const readAlert = (alertId: string) => executeReadAlert({ input: { alertId } })\n\n  const hideDropdown = () => setDropdownState(null)\n  useEffect(() => props.history.listen(hideDropdown))\n\n  return (\n    <nav className={cx(styles.container, 'solid')}>\n      <Width>\n        <NavBar\n          loading={fetching}\n          currentUser={currentUser}\n          toggleDropdownVisible={setDropdownState}\n        />\n        <div className={styles.dropdownPosition}>\n          {dropdownState &&\n            <Dropdown hide={hideDropdown}>\n              {dropdownState === 'users' && <UserDropdown />}\n              {dropdownState === 'alerts' && currentUser && <AlertDropdown\n                alerts={currentUser.alerts}\n                onEmptyClick={hideDropdown}\n                readAlert={readAlert}\n              />}\n            </Dropdown>\n          }\n        </div>\n      </Width>\n    </nav>\n  )\n}\n\n\n\ntype NavBarProps = {\n  loading: boolean,\n  currentUser: CurrentUserQuery['currentUser'] | null,\n  toggleDropdownVisible: (state: State['dropdownState']) => void,\n}\n\nconst NavBar: React.SFC<NavBarProps> = ({ toggleDropdownVisible, currentUser, loading }) => {\n  return (\n    <div className={styles.content}>\n      <Link to=\"/\">\n        <div className={styles.title}>FriendWorld</div>\n      </Link>\n\n      <div className={styles.links}>\n        {currentUser\n          ? <SignedInMenu currentUser={currentUser} toggleDropdownVisible={toggleDropdownVisible} />\n          : loading ? false : <SignedOutMenu />\n        }\n      </div>\n    </div>\n  )\n}\n\ntype SignedInMenuProps = {\n  currentUser: CurrentUser\n  toggleDropdownVisible: NavBarProps['toggleDropdownVisible']\n}\n\nconst SignedInMenu = ({ currentUser, toggleDropdownVisible }: SignedInMenuProps) => {\n  const { isDesktop, isMobile } = useResponsive(540)\n\n  return (\n    <>\n      <div\n        className={styles.link}\n        onClick={() => toggleDropdownVisible('users')}\n        style={{ maxWidth: '180px', overflow: 'auto' }}\n      >\n        {currentUser.username}\n        <div\n          className={cx(styles.circle, styles.user)}\n          style={{ backgroundImage: `url(${currentUser.avatarUrl})` }}\n        />\n      </div>\n\n      {isDesktop && (\n        <div className={styles.link} onClick={() => toggleDropdownVisible('alerts')}>\n          Alerts\n          <AlertCircle unread={currentUser.alerts.length} />\n        </div>\n      )}\n\n      {isMobile && (\n        <div className={styles.link} onClick={() => toggleDropdownVisible('alerts')}>\n          <AlertCircle unread={currentUser.alerts.length} />\n        </div>\n      )}\n      {/*\n      <Link to=\"/signup\" className={styles.link}>Signup</Link>\n      <Link to=\"/login\" className={styles.link}>Login</Link>\n    */}\n    </>\n  )\n}\n\nconst SignedOutMenu = () => (\n  <>\n    <Link to=\"/login\" className={styles.link}>Login</Link>\n    <Link to=\"/signup\" className={styles.link}>Signup</Link>\n  </>\n)\n\nexport default Nav\n","import * as React from 'react'\nimport styles from './styles.module.scss'\n\ntype Props = {\n  error: Error | string\n}\n\nconst DisplayError: React.SFC<Props> = ({ error }) => (\n  <div className={styles.error}>\n    An Error Occurred: {JSON.stringify(error, null, 3)}\n  </div>\n)\n\nexport default DisplayError\n","import React, { useState, useEffect } from 'react'\nimport styles from './styles.module.scss'\n\n\nconst Loading: React.SFC<{}> = () => {\n  const [dots, setDots] = useState<string>('')\n\n  useEffect(() => {\n    const interval = setInterval(() => setDots(dots + '.'), 350)\n    return () => clearInterval(interval)\n  })\n\n  return (\n    <div className={styles.loading}>\n      loading{dots}\n    </div>\n)\n}\n\nexport default Loading\n","import React, { useState, useMemo } from 'react';\nimport { useMutation } from 'urql'\nimport jwt from 'utils/jwt'\nimport DisplayError from 'components/DisplayError'\nimport Loading from 'components/Loading'\nimport styles from './styles.module.scss'\n\n\nconst loginMutation = `\nmutation($input: LoginInput!) {\n  login(input: $input) {\n    jwtToken\n    query {\n      currentUser {\n        id\n        username\n      }\n    }\n  }\n}`\n\n\ntype LoginInput = {\n  input: {\n    username: string,\n    password: string\n  }\n}\ntype LoginResponse = { login: { jwtToken: string }}\ntype Props = {}\n\ntype State = {\n  username: string,\n  password: string\n}\n\nfunction Login() {\n  const [username, setUsername] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [errorText, setErrorText] = useState<string>('')\n\n\n  const [{ error, fetching, data }, executeLogin] = useMutation<LoginResponse, LoginInput>(loginMutation)\n\n  useMemo(() => {\n    if (data && data.login) {\n      if (data.login.jwtToken) {\n        jwt.set(username, data.login.jwtToken)\n        jwt.setCurrentUser(username)\n        window.location.href = '/'\n      } else {\n        setErrorText('Incorrect username/password combination')\n      }\n    }\n  }, [username, data])\n\n  return (\n    <section className={styles.login}>\n      <div className={styles.card}>\n        <h1>Login</h1>\n        {error && <DisplayError error={error} />}\n        {fetching && <Loading />}\n        {!error && !fetching && (\n          <form>\n            <input\n              name=\"fw_username\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <button\n              className={styles.submitButton}\n              onClick={(e) => {\n                e.preventDefault()\n                if (username && password) {\n                  setErrorText('')\n                  executeLogin({ input: { username, password } })\n                }\n              }}\n            >\n              Submit\n            </button>\n            {errorText && <DisplayError error={errorText} />}\n\n          </form>\n        )}\n      </div>\n    </section>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react';\nimport { useMutation } from 'urql'\nimport jwt from 'utils/jwt'\nimport DisplayError from 'components/DisplayError'\nimport Loading from 'components/Loading'\nimport styles from './styles.module.scss'\n\nconst signupMutation = `\nmutation($input: SignupInput!) {\n  signup(input: $input) {\n    jwtToken\n  }\n}`\n\n\ntype SignupInput = {\n  input: {\n    username: string,\n    password: string\n  }\n}\n\ntype SignupResponse = { signup: { jwtToken: string }}\n\ntype Props = {}\n\ntype State = {\n  username: string,\n  password: string\n}\n\nfunction Signup() {\n  const [username, setUsername] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [passwordConfirm, setPasswordConfirm] = useState<string>('')\n  const [errorText, setErrorText] = useState<string>('')\n  const [{ error, fetching, data }, executeSignup] = useMutation<SignupResponse, SignupInput>(signupMutation)\n\n  const signup = () => {\n    if (!username || !password) {\n      setErrorText('Must include username and password.')\n      return\n    }\n    if (password !== passwordConfirm) {\n      setErrorText('Password must match Password Confirmation')\n      return\n    }\n    executeSignup({ input: { username, password } })\n  }\n\n  const displayErrorText = error\n    ? error.message.includes('violates unique constraint')\n      ? 'That username is already taken. Please try again'\n      : error.message\n    : errorText\n      ? errorText\n      : ''\n\n  if (data && !error) {\n    jwt.set(username, data.signup.jwtToken)\n    jwt.setCurrentUser(username)\n    window.location.href = '/onboarding'\n  }\n\n  return (\n    <section className={styles.signup}>\n      <div className={styles.card}>\n        <h1>Create Account</h1>\n        <form>\n          <div className={styles.inputs}>\n            <input\n              name=\"fw_username\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={(e) => {\n                setUsername(e.target.value)\n                if (e.target.value.length > 18) setErrorText('Username must be 18 characters or less')\n              }}\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              name=\"password_confirm\"\n              placeholder=\"Password Confirmation\"\n              value={passwordConfirm}\n              onChange={(e) => setPasswordConfirm(e.target.value)}\n            />\n          </div>\n\n          {displayErrorText && <DisplayError error={displayErrorText} />}\n          {fetching && <Loading />}\n          {!fetching && (\n            <button\n              className={styles.submitButton}\n              onClick={(e) => {\n                e.preventDefault()\n                signup()\n              }}\n            >\n              Submit\n            </button>\n          )}\n        </form>\n      </div>\n    </section>\n  )\n}\n\n\n\nexport default Signup\n\n","import * as React from 'react';\nimport { Link } from 'react-router-dom'\nimport cx from 'classnames'\nimport ParsedText from '../ParsedText'\nimport profanityFilter from 'utils/profanityFilter'\nimport styles from './styles.module.scss';\n\n\nexport type PostType = {\n  id: string,\n  createdAt: string,\n  content: string,\n  author?: {\n    id: string,\n    username: string\n    avatarUrl?: string\n    postStats?: {\n      totalCount: number\n    }\n  } | null,\n  thread?: {\n    id: string,\n    title: string\n  }\n}\n\ntype Props = {\n  post: PostType\n}\n\nconst Post: React.SFC<Props> = ({ post }) => (\n  <article className={styles.post}>\n    <div className={styles.main}>\n      {!!post.author &&\n        <Link to={`/users/${post.author.username}`} className={styles.panel}>\n          <aside className={styles.panelContainer}>\n            <div className={styles.avatar} style={{ backgroundImage: `url(${post.author.avatarUrl})` }} />\n            <div className={styles.userInfo}>\n              <div className={styles.username}>{post.author.username}</div>\n              {post.author.postStats &&\n                <div className={styles.totalPosts}><strong>Posts:</strong> {post.author.postStats.totalCount}</div>\n              }\n            </div>\n          </aside>\n        </Link>\n      }\n\n\n      <div className={styles.content}>\n        <ParsedText content={post.content} />\n      </div>\n\n    </div>\n    <div className={cx(styles.footer, 'offWhite')}>\n      <div className={styles.postedAt}>\n        <time>Posted at: {new Date(post.createdAt).toISOString()}</time>\n        <span><Link to={`/posts/${post.id}`}>/posts/{post.id}</Link></span>\n      </div>\n      {!!post.thread && (\n        <div className={styles.threadLink}>\n          In thread: <Link to={`/threads/${post.thread.id}`}>{profanityFilter(post.thread.title)}</Link>\n        </div>\n      )}\n    </div>\n  </article>\n)\n\nexport default Post\n","import * as React from 'react';\nimport { useQuery } from 'urql'\nimport { Link } from 'react-router-dom'\nimport styles from './styles.module.scss'\nimport Post, { PostType } from 'components/Post'\nimport DisplayError from 'components/DisplayError'\nimport Loading from 'components/Loading'\n\n\ntype PostQuery = {\n  post?: PostType\n}\n\nconst queryType = process.env.NODE_ENV === 'production' ? 'post' : 'postById'\n\nconst postQuery = `\nquery ${queryType} ($id: Int!){\n  post: ${queryType} (id: $id) {\n    id\n    createdAt\n    content\n    author {\n      id\n      username\n      avatarUrl\n      postStats: authoredPosts {\n        totalCount\n      }\n    }\n    thread {\n      id\n      title\n    }\n  }\n}`\n\n\nconst Posts: React.SFC<{ id: number }> = ({ id }) => {\n  const [{ error, fetching, data }] = useQuery<PostQuery>({ query: postQuery, variables: { id } })\n\n  return (\n    <section>\n      <div className={styles.back}>\n        <Link to=\"/\">{'< Back to forum'}</Link>\n      </div>\n\n      <div className={styles.left}>\n        {error && <DisplayError error={error} />}\n        {fetching && <Loading />}\n        {data && (\n          data.post\n            ? <Post post={data.post}/>\n            : 'This post does not exist!'\n        )}\n      </div>\n    </section>\n\n  )\n}\n\nexport default Posts\n","import * as React from 'react';\nimport noop from 'lodash/noop'\nimport styles from './styles.module.scss';\nimport Img from '../Img'\n\ntype Props = {\n  url: string\n  content: string\n  img?: string\n  onClick?: () => unknown\n}\n\nconst Ad: React.SFC<Props> = ({ url, img, content, onClick }) => (\n  <div className={styles.ad}>\n    <a\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      onClick={onClick || noop}\n    >\n      {img &&\n        <Img url={img} alt={content} />\n      }\n      {content &&\n        <div className={styles.content}>{content}</div>\n      }\n    </a>\n  </div>\n)\n\nexport default Ad\n","import React, { useMemo } from 'react'\nimport { sampleSize, shuffle, isObject } from 'lodash'\nimport { useQuery, useMutation } from 'urql'\nimport Ad from 'components/Ad'\nimport styles from './styles.module.scss'\n\nconst safeParse = (str?: any) => {\n  try {\n    const obj = JSON.parse(str)\n    return isObject(obj) ? obj : {}\n  } catch(e) {\n    return {}\n  }\n}\nconst adQuery = `{\n  currentUser {\n    id\n    trackingInfo\n  }\n  ads: adsList {\n    id\n    url\n    img\n    content\n    tags\n    isGeneric\n    weight\n    targetTags\n    primaryTags\n  }\n}`\n\n// , weight        int default 1\n// , target_tags   jsonb default '[]'\n// , primary_tags  jsonb default '[]'\n// , tags          jsonb default '[]'\n\n\ntype AdQuery = {\n  ads: Array<{\n    id: string\n    url: string\n    img: string\n    content: string\n    isGeneric: boolean\n    weight: number\n    tags: string\n    targetTags: string\n    primaryTags: string\n  }>\n  currentUser?: {\n    id: string\n    trackingInfo: string\n  }\n}\n\ntype Ad = {\n  id: string\n  url: string\n  img: string\n  content: string,\n  isGeneric: boolean\n  weight: number\n  tags: Array<string>\n  primaryTags: Array<string>\n  targetTags: Array<string>\n}\n\n\nconst logAdClickMutation = `\nmutation logAdClick($input: LogAdClickInput!) {\n  logAdClick(input: $input) {\n    adClick {\n      adId\n      userId\n      clickCount\n    }\n  }\n}`\n\ntype LogAdClickInput = {\n  input: {\n    ad: string\n  }\n}\n\ntype LogAdClickResponse = {\n  logAdClick: {\n    adClick: {\n      adId: string\n      userId: string\n      clickCount: number\n    }\n  }\n}\n\ntype Filter = {\n  tags?: Array<string>,\n  targetTags?: Array<string>,\n}\n\nfunction filterAds(\n  allAds: Array<Ad>,\n  filter: Filter = {},\n  n: number = 1,\n): Array<Ad> {\n  const tags = new Set(filter.tags || [])\n  const targetTags = new Set(filter.targetTags || [])\n  const viableAds = allAds.filter(ad => ad.isGeneric)\n\n  const primaryAds = allAds.filter(ad => ad.primaryTags.some(a => tags.has(a)))\n\n  if (primaryAds.length >= n) {\n    return sampleSize(primaryAds, n)\n  }\n  const secondaryAds = allAds.filter(ad =>\n    ad.tags.some(a => tags.has(a))\n    && !primaryAds.includes(ad)\n  )\n\n  if (primaryAds.length + secondaryAds.length >= n) {\n    return [...shuffle(primaryAds), ...sampleSize(secondaryAds, n - primaryAds.length)]\n  }\n\n  const taggedAds = [...shuffle(primaryAds), ...shuffle(secondaryAds)]\n\n  const targetAds = allAds.filter(ad =>\n    ad.targetTags.some(a => targetTags.has(a))\n    && !taggedAds.includes(ad)\n  )\n\n  const remainingAds = [\n    ...targetAds,\n    ...viableAds.filter(ad => !taggedAds.includes(ad))\n  ]\n\n  return [...taggedAds, ...sampleSize(remainingAds, n - taggedAds.length)]\n}\n\nexport function useAds(n: number = 1, filter: Filter = {}) {\n  const [{ data, fetching }] = useQuery<AdQuery>({ query: adQuery })\n\n  const ads = useMemo(() => {\n    if (!data) return []\n    const parsedAds = data.ads.map(ad => ({\n      ...ad,\n      tags: JSON.parse(ad.tags),\n      primaryTags: JSON.parse(ad.primaryTags),\n      targetTags: JSON.parse(ad.targetTags),\n    }))\n    const trackingInfo = data.currentUser ? safeParse(data.currentUser.trackingInfo) : {}\n    const targetTags = [\n      trackingInfo.gender,\n      ...(trackingInfo.profileTags || [])\n    ]\n\n    return filterAds(parsedAds, {...filter, targetTags}, n)\n  }, [n, filter, data])\n\n  return { ads, fetchingAds: fetching }\n}\n\ntype Props = {\n  ads: Array<Ad>,\n  fetching?: boolean,\n}\nconst AdContainer = ({ ads, fetching }: Props) => {\n  const [response, executeLogAdClick] = useMutation<LogAdClickResponse, LogAdClickInput>(logAdClickMutation) // eslint-disable-line\n\n  if (fetching) return <>loading...</>\n  if (!ads) return null\n\n  const logAdClick = (id: string) =>\n    setTimeout(() =>\n      executeLogAdClick({ input: { ad: id }\n    }), 200)\n\n  return (\n    <section className={styles.adContainer}>\n      <div className={styles.label}>SPONSORED CONTENT</div>\n      {ads.map((ad, i) => (\n        <div className={styles.adWrapper} key={i}>\n          <Ad {...ad} onClick={() => logAdClick(ad.id)} />\n        </div>\n      ))}\n    </section>\n  )\n}\n\n\nexport default AdContainer\n","import React, { useState } from 'react'\nimport styles from './styles.module.scss'\n\nconst defaultPlaceholder = \"Join the conversation...\"\n\ntype Props = {\n  onSubmit: (content: string) => unknown,\n  onChange?: (content: string) => unknown,\n  buttonContent?: string,\n  placeholder?: string,\n  inputStyle?: Object\n}\n\nfunction TextInput ({\n  placeholder,\n  buttonContent,\n  inputStyle,\n  onSubmit,\n  onChange,\n}: Props) {\n  const [content, setContent] = useState('')\n\n  const submit = () => {\n    onSubmit(content)\n    setContent('')\n  }\n  const submitOnCommandEnter = (e: any) => {\n    if (e.keyCode === 13 && e.metaKey) {\n      submit()\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.inner}>\n      <textarea\n        className={styles.contentInput}\n        placeholder={placeholder || defaultPlaceholder}\n        onChange={e => {\n          setContent(e.target.value)\n          onChange && onChange(e.target.value)\n        }}\n        value={content}\n        style={inputStyle}\n        onKeyDown={submitOnCommandEnter}\n      />\n      <button\n        className={styles.submitButton}\n        onClick={submit}\n      >\n        {buttonContent || 'Submit'}\n      </button>\n      </div>\n    </div>\n  )\n}\n\nexport default TextInput\n","import React, { Fragment } from 'react';\nimport { useMutation, useQuery } from 'urql'\nimport { Link } from 'react-router-dom'\nimport cx from 'classnames'\nimport styles from './styles.module.scss'\nimport AdContainer, { useAds } from '../AdContainer'\nimport Post, { PostType } from 'components/Post'\nimport TextInput from 'components/TextInput'\nimport DisplayError from 'components/DisplayError'\nimport Loading from 'components/Loading'\nimport { getTags } from 'utils/parsers'\nimport useResponsive from 'utils/useResponsive'\nimport profanityFilter from 'utils/profanityFilter'\n\n\n\ntype ThreadQuery = {\n  thread?: {\n    id: number\n    title: string\n    posts: Array<PostType & { tags: string }>\n  }\n  currentUser?: {\n    id: string\n  }\n}\n\nconst queryType = process.env.NODE_ENV === 'production' ? 'thread' : 'threadById'\nconst threadQuery = `\nquery ${queryType} ($id: Int!) {\n  thread: ${queryType} (id: $id) {\n    id\n    title\n    posts: postsList {\n      id\n      content\n      createdAt\n      tags\n      author {\n        id\n        username\n        avatarUrl\n        postStats: authoredPosts {\n          totalCount\n        }\n      }\n    }\n  }\n  currentUser {\n    id\n  }\n}`\n\n\nconst createPostMutation = `\nmutation createPost($input: CreatePostInput!) {\n  createPost(input: $input) {\n    post {\n      id\n      content\n      createdAt\n      author {\n        id\n        avatarUrl\n        username\n      }\n    }\n  }\n}`\n\ntype CreatePostInput = {\n  input: {\n    content: string,\n    threadId: number,\n    tags: string, // Array<string>,\n    usernames: string, // Array<string>\n  }\n}\n\ntype CreatePostResponse = { createPost: { post: PostType } }\n\ntype AddPostProps = {\n  threadId: number,\n  disabled?: boolean\n}\nconst AddPost: React.SFC<AddPostProps> = ({ threadId, disabled }) => {\n  const [response, executeCreatePost] = useMutation<CreatePostResponse, CreatePostInput>(createPostMutation) // eslint-disable-line\n\n  const submit = (content: string) => {\n    if (!content) return\n    const { tags, usernames } = getTags(content)\n    executeCreatePost({\n      input: {\n        threadId,\n        content,\n        tags,\n        usernames,\n      }\n    })\n  }\n\n  return (\n    <>\n      {disabled && (\n        <Link to=\"/signup\">\n          <h2 className={styles.signup}>Create An Account To Join The Conversation!</h2>\n        </Link>\n      )}\n      <div className={cx(styles.addPost, disabled && styles.disabled)}>\n        <TextInput onSubmit={submit} />\n      </div>\n    </>\n  )\n}\n\nconst stickiedThreads = [1]\nconst Threads: React.SFC<{ id: number }> = ({ id }) => {\n  const { isMobile, isDesktop } = useResponsive(820)\n  const [{ data, error, fetching }] = useQuery<ThreadQuery>({ query: threadQuery, variables: { id } })\n\n  const tags = (\n    !stickiedThreads.includes(id) && data && data.thread\n      ? data.thread.posts.flatMap(p => JSON.parse(p.tags))\n      : []\n  )\n  const { ads, fetchingAds } = useAds(4, { tags })\n\n  const showMobileAd = (i: number) => {\n    if (!isMobile) return false\n    if ((i + 1) % 4) return false\n\n    const adIx = (((i + 1) / 4) - 1) % ads.length\n\n    return (\n      <div className={styles.ad}>\n        <AdContainer ads={[ads[adIx]]} fetching={fetchingAds} />\n      </div>\n    )\n  }\n\n  const isError = error && <DisplayError error={error} />\n  const isLoading = fetching && <Loading />\n\n\n  const isData = data && (data.thread ? (\n    <div className={styles.container}>\n      <header className={styles.threadTitle}>\n        <h2 >{profanityFilter(data.thread.title)}</h2>\n      </header>\n      <div>\n        <Link to={`/threads/${data.thread.id}`}>\n          <div className={styles.threadLink}>\n            /threads/{data.thread.id}\n          </div>\n        </Link>\n        <>\n          {data.thread.posts.map((post, i) =>\n            <Fragment key={post.id}>\n              {showMobileAd(i)}\n              <Post post={post} />\n            </Fragment>\n          )}\n        </>\n        <AddPost\n          threadId={data.thread.id}\n          disabled={!data.currentUser}\n        />\n      </div>\n    </div>\n  ) : 'This thread does not exist!')\n\n  return (\n    <section>\n      <div className={styles.back}>\n        <Link to=\"/\">{'< Back to forum'}</Link>\n      </div>\n\n      <div className={styles.threadContainer}>\n        <div className={styles.left}>\n          {isError}\n          {isLoading}\n          {isData}\n        </div>\n\n        {isDesktop && (\n          <div className={styles.adContainer}>\n            <AdContainer ads={ads} fetching={fetchingAds} />\n          </div>\n        )}\n      </div>\n    </section>\n  )\n}\n\nexport default Threads\n\n","import React, { useState } from 'react';\nimport { useQuery, useMutation } from 'urql'\nimport { Link } from 'react-router-dom'\nimport cx from 'classnames'\n\n\nimport styles from './styles.module.scss';\nimport { getTags } from 'utils/parsers'\nimport profanityFilter from 'utils/profanityFilter'\nimport TextInput from 'components/TextInput'\nimport Post from 'components/Post'\n\n\n\ntype UserQuery = {\n  currentUser?: {\n    id: string\n    username: string\n    avatarUrl: string\n    postStats: {\n      totalCount: number\n    }\n  }\n}\n\nconst userQuery = `{\n  currentUser {\n    id\n    username\n    avatarUrl\n    postStats: authoredPosts {\n      totalCount\n    }\n  }\n}`\n\ntype CreateThreadInput = {\n  input: {\n    title: string,\n    content: string,\n    tags: string, // Array<string>,\n    usernames: string, // Array<string>,\n  }\n}\ntype CreateThreadResponse = { createThread: { thread: { id: string, title: string } } }\n\nconst createThreadMutation = `\nmutation createThread($input: CreateThreadInput!) {\n  createThread(input: $input) {\n    thread {\n      id\n      title\n    }\n  }\n}`\n\n\nconst NewThread: React.SFC<{}> = () => {\n  const [title, setTitle] = useState<string>('')\n  const [content, setContent] = useState<string>('')\n  const [query] = useQuery<UserQuery>({ query: userQuery })\n  const [response, executeCreateThread] = useMutation<CreateThreadResponse, CreateThreadInput>(createThreadMutation)\n\n  const createThread = () => {\n    if (!title || !content) return\n    const { tags, usernames } = getTags(title + ' ' + content)\n    executeCreateThread({\n      input: {\n        title,\n        content,\n        tags,\n        usernames,\n      }\n    })\n  }\n\n  if (response.data) {\n    window.location.href = `/threads/${response.data.createThread.thread.id}`\n    return <div />\n  }\n  if (query.fetching || response.fetching) return <span>loading...</span>\n\n  const disabled = query.data && !query.data.currentUser\n  const author = query.data && query.data.currentUser && {\n    ...query.data.currentUser,\n    postStats: {\n      totalCount: query.data.currentUser.postStats.totalCount + 1\n    }\n  }\n\n  return (\n    <section className={styles.newThread}>\n      <div className={styles.back}>\n        <Link to=\"/\">{'< Back to forum'}</Link>\n      </div>\n      {!disabled && <h1 className={styles.sectionTitle}>New Thread</h1>}\n      {disabled && (\n        <Link to=\"/signup\">\n          <h2 className={styles.signup}>Create An Account To Join The Conversation!</h2>\n        </Link>\n      )}\n\n      <div className={cx({ [styles.disabled]: disabled })}>\n        <h2 className={styles.label}>Title</h2>\n        <input\n          className={styles.input}\n          onChange={e => setTitle(e.target.value)}\n          value={title}\n        />\n        <h2 className={styles.label}>Content</h2>\n        <TextInput\n          onSubmit={createThread}\n          onChange={setContent}\n          buttonContent=\"Start Thread\"\n          placeholder=\"\"\n          inputStyle={{ height: '200px' }}\n        />\n        {(title || content) && (\n          <>\n            <h2 className={styles.label}>[PREVIEW] {profanityFilter(title)}</h2>\n            <Post\n              post={{\n                id: 'XX',\n                createdAt: new Date().toString(),\n                content,\n                author,\n              }}\n            />\n          </>\n        )}\n      </div>\n    </section>\n  )\n}\n\nexport default NewThread\n","import React, { useState } from 'react';\nimport { useQuery, useMutation } from 'urql'\nimport { Link, Redirect } from 'react-router-dom'\nimport { RouteComponentProps } from 'react-router'\n\nimport styles from './styles.module.scss'\nimport DisplayError from 'components/DisplayError'\nimport Loading from 'components/Loading'\nimport useResponsive from 'utils/useResponsive'\nimport { getGender, getKeywords } from 'utils/parsers'\n\ntype CurrentUser = {\n  id: string\n  createdAt: string\n  username: string\n  avatarUrl: string\n  email: string | null\n  gender: string\n  birthday: string | null\n  bio: string\n  job: string\n  interests: string\n  websites: string\n  media: string\n  religion: string\n  politics: string\n  trackingInfo: string\n  postStats: {\n    totalCount: number\n  }\n}\ntype CurrentUserQuery = {\n  currentUser?: CurrentUser\n}\n\nconst userProps = `\n  id\n  createdAt\n  username\n  avatarUrl\n  email\n  gender\n  birthday\n  bio\n  job\n  interests\n  websites\n  media\n  religion\n  politics\n  trackingInfo\n`\n\nconst currentUserQuery = `{\n  currentUser {\n    ${userProps}\n    trackingInfo\n    postStats: authoredPosts {\n      totalCount\n    }\n  }\n}`\n\n\nconst updateUserMutation = `mutation UpdateUser($input: UpdateUserInput!) {\n  updateUser(input: $input) {\n    user {\n      ${userProps}\n    }\n  }\n}`\n\ntype UpdateUserInput = {\n  input: {\n    avatarUrl?: string\n    email?: string | null\n    gender?: string\n    birthday?: string | null\n    bio?: string\n    job?: string\n    interests?: string\n    websites?: string\n    media?: string\n    religion?: string\n    politics?: string\n    trackingInfo?: string\n  }\n}\n\ntype UpdateUserPayload = {\n  user: UpdateUserInput['input']\n}\n\n// const formatDate = (date: string) => new Date(date).toLocaleString('en-US', {\n//   weekday: 'long',\n//   year: 'numeric',\n//   month: 'long',\n//   day: 'numeric',\n//   hour: 'numeric',\n//   minute: 'numeric',\n//   second: 'numeric'\n// })\n\ntype Props = RouteComponentProps\n\nexport default function Profile({ history }: Props) {\n  const [{ data, error, fetching }] = useQuery<CurrentUserQuery>({ query: currentUserQuery })\n  const goto = (url: string) => history.push(url)\n\n  if (error) return <DisplayError error={error} />\n  if (fetching) return <Loading />\n  if (!data) return null\n  if (!data.currentUser) return <Redirect to=\"/signup\" />\n\n\n  return <ProfileContent currentUser={data.currentUser} goto={goto} />\n}\n\nfunction getTrackingInfo(fields: UpdateUserInput['input']) {\n  const trackingInfo = fields.trackingInfo ? JSON.parse(fields.trackingInfo) : {}\n  const gender = fields.gender ? getGender(fields.gender) : undefined\n  const profileTags = getKeywords([\n    fields.bio,\n    fields.job,\n    fields.interests,\n    fields.media,\n    fields.religion,\n    fields.politics,\n  ].join(' '))\n\n  return JSON.stringify({ ...trackingInfo, gender, profileTags })\n}\n\nconst validDate = (dateStr: string) => Date.parse(dateStr) ? new Date(dateStr).toISOString() : null\nconst validEmail = (emailStr: string) => emailStr.match(/^.+@.+\\..+$/) ? emailStr : null\nconst wait = (ms: number) => new Promise(res => setTimeout(res, ms))\ntype ContentProps = {\n  currentUser: CurrentUser,\n  goto: (url: string) => unknown\n}\n\nfunction ProfileContent ({ currentUser, goto }: ContentProps) {\n  const [avatarUrl, setAvatarUrl] = useState<string>(currentUser.avatarUrl)\n  const [email, setEmail] = useState<string>(currentUser.email || '')\n  const [gender, setGender] = useState<string>(currentUser.gender)\n  const [birthday, setBirthday] = useState<string>(currentUser.birthday || '')\n  const [bio, setBio] = useState<string>(currentUser.bio)\n  const [job, setJob] = useState<string>(currentUser.job)\n  const [interests, setInterests] = useState<string>(currentUser.interests)\n  const [websites, setWebsites] = useState<string>(currentUser.websites)\n  const [media, setMedia] = useState<string>(currentUser.media)\n  const [religion, setReligion] = useState<string>(currentUser.religion)\n  const [politics, setPolitics] = useState<string>(currentUser.politics)\n\n  const [submitted, setSubmitted] = useState<boolean>(false)\n  const { isMobile, isDesktop } = useResponsive(540)\n\n\n  const [isFakeLoading, setIsFakeLoading] = useState<boolean>(false)\n  const [response, executeUpdateUser] = useMutation<UpdateUserPayload, UpdateUserInput>(updateUserMutation)\n\n  const bdayError = submitted && birthday && !validDate(birthday) ? 'Birthday must be a valid date' : ''\n  const emailError = submitted && email && !validEmail(email) ? 'Email must be in correct format' : ''\n\n  const header = (\n    <header className={styles.header}>\n      <h1>Update Profile: {currentUser.username}</h1>\n      <div className={styles.subheader}>uuid: {currentUser.id}</div>\n      <div className={styles.subheader}><Link to={`/users/${currentUser.username}`}>View Profile</Link></div>\n    </header>\n  )\n\n  const updateUser = async () => {\n    setSubmitted(true)\n    setIsFakeLoading(true)\n    const fields = {\n        email: validEmail(email),\n        birthday: validDate(birthday),\n        avatarUrl,\n        gender,\n        bio,\n        job,\n        interests,\n        websites,\n        media,\n        religion,\n        politics,\n      }\n    const trackingInfo = getTrackingInfo({ ...fields, trackingInfo: currentUser.trackingInfo })\n    await Promise.all([\n      executeUpdateUser({\n        input: { ...fields, trackingInfo }\n      }),\n      wait(1000)\n    ])\n    setIsFakeLoading(false)\n    // goto(`/users/${currentUser.username}`)\n  }\n\n  return (\n    <div className={styles.profile}>\n      {isMobile && header}\n      <div className={styles.content}>\n        <div className={styles.left}>\n          <div>\n            <div className={styles.avatar} style={{ backgroundImage: `url(${avatarUrl})` }} />\n            <div><strong>Posts:</strong> {currentUser.postStats.totalCount}</div>\n          </div>\n        </div>\n\n        <div className={styles.right}>\n          {response.fetching || isFakeLoading\n            ? <Loading />\n            :\n            <>\n              {isDesktop && header}\n              <div className={styles.buttonContainer}>\n                <button className={styles.submitButton} onClick={updateUser}>Update Profile</button>\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>Avatar Url</h3>\n                <input\n                  className={styles.contentInput}\n                  value={avatarUrl}\n                  placeholder=\"http://www.website.com/image.jpeg\"\n                  onChange={e => setAvatarUrl(e.target.value)}\n                />\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>Email</h3>\n                <input\n                  className={styles.contentInput}\n                  value={email}\n                  placeholder=\"email@website.com\"\n                  onChange={e => setEmail(e.target.value)}\n                />\n                {!!emailError && <div>{emailError}</div>}\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>Gender</h3>\n                <input\n                  className={styles.contentInput}\n                  value={gender}\n                  placeholder=\"Gender\"\n                  onChange={e => setGender(e.target.value)}\n                />\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>Birthday</h3>\n                <input\n                  className={styles.contentInput}\n                  value={birthday}\n                  placeholder=\"03/11/19\"\n                  onChange={e => setBirthday(e.target.value)}\n                />\n                {!!bdayError && <div>{bdayError}</div>}\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>About Me</h3>\n                <textarea\n                  className={styles.contentInput}\n                  value={bio}\n                  placeholder=\"Tell us about yourself!\"\n                  onChange={e => setBio(e.target.value)}\n                />\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>Occupation</h3>\n                <input\n                  className={styles.contentInput}\n                  value={job}\n                  placeholder=\"Accountant\"\n                  onChange={e => setJob(e.target.value)}\n                />\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>Interestes</h3>\n                <input\n                  className={styles.contentInput}\n                  value={interests}\n                  placeholder=\"Bowling, Stamp Collecting, Family\"\n                  onChange={e => setInterests(e.target.value)}\n                />\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>Favorite Websites</h3>\n                <input\n                  className={styles.contentInput}\n                  value={websites}\n                  placeholder=\"friendworld.social, fastcashmoneyplus.biz\"\n                  onChange={e => setWebsites(e.target.value)}\n                />\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>Favorite Movies, TV shows, and Music</h3>\n                <input\n                  className={styles.contentInput}\n                  value={media}\n                  placeholder=\"The Godfather, Citizen Kane, Casablanca\"\n                  onChange={e => setMedia(e.target.value)}\n                />\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>Religious Views</h3>\n                <input\n                  className={styles.contentInput}\n                  value={religion}\n                  placeholder=\"God\"\n                  onChange={e => setReligion(e.target.value)}\n                />\n              </div>\n\n              <div className={styles.inputSection}>\n                <h3>Political Views</h3>\n                <input\n                  className={styles.contentInput}\n                  value={politics}\n                  placeholder=\"Liberal/Conservative\"\n                  onChange={e => setPolitics(e.target.value)}\n                />\n              </div>\n\n              <div className={styles.buttonContainer}>\n                <button className={styles.submitButton} onClick={updateUser}>Update Profile</button>\n              </div>\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\n","import React from 'react';\nimport { useQuery } from 'urql'\nimport styles from './styles.module.scss'\nimport { Link } from 'react-router-dom'\nimport Post from 'components/Post'\nimport DisplayError from 'components/DisplayError'\nimport ParsedText from 'components/ParsedText'\nimport Loading from 'components/Loading'\nimport useResponsive from 'utils/useResponsive'\n\n\nconst userQuery = `\nquery userByUsername ($username: UsernameDomain!) {\n  ads {\n    totalCount\n  }\n  user: userByUsername (username: $username) {\n    id\n    createdAt\n    username\n    avatarUrl\n    email\n    gender\n    birthday\n    bio\n    job\n    interests\n    websites\n    media\n    religion\n    politics\n    trackingInfo\n    postStats: authoredPosts {\n      totalCount\n    }\n    adClicks {\n      totalCount\n    }\n    posts: authoredPostsList (first: 10, orderBy: [CREATED_AT_DESC]) {\n      id\n      content\n      createdAt\n      thread {\n        id\n        title\n      }\n    }\n  }\n}`\n\ntype UserQuery = {\n  ads: {\n    totalCount: number\n  }\n  user: {\n    id: string\n    createdAt: string\n    username: string\n    avatarUrl: string | null\n    email: string | null\n    gender: string | null\n    birthday: string | null\n    bio: string | null\n    job: string | null\n    interests: string | null\n    websites: string | null\n    media: string | null\n    religion: string | null\n    politics: string | null\n    postStats: {\n      totalCount: number\n    }\n    adClicks: {\n      totalCount: number\n    }\n    posts: Array<{\n      id: string\n      content: string\n      createdAt: string\n      thread: {\n        id: string\n        title: string\n      }\n\n    }>\n  } | null\n}\n\nconst InfoSection = ({ title, info }: { title: string, info: any }) => (\n  info && (\n    <div className={styles.infoSection}>\n      <h3>{title}</h3>\n      <ParsedText content={info} />\n    </div>\n  )\n)\n\ntype Props = {\n  username: string\n}\n\nconst formatDate = (date: string) => new Date(date).toLocaleString('en-US', {\n  weekday: 'long',\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric'\n})\n\nconst User: React.SFC<Props> = ({ username }) => {\n  const [{ error, fetching, data }] = useQuery<UserQuery>({ query: userQuery, variables: { username } })\n  const { isMobile, isDesktop } = useResponsive(540)\n\n  if (error) return <DisplayError error={error} />\n  if (fetching) return <Loading />\n  if (!data || !data.user) return (\n    <div style={{ margin: '20px 0', textAlign: 'center' }}>\n      {username} is not an active Friendworld user!\n    </div>\n  )\n\n  const { user, ads } = data\n\n  const header = (\n    <header className={styles.header}>\n      <h1 className={styles.intro}>Welcome to {user.username}'s Profile!</h1>\n      <h4 className={styles.memberSince}>{user.username} has been a member since {formatDate(user.createdAt)}</h4>\n      <h4 className={styles.memberSince}>{user.username} has engaged with {user.adClicks.totalCount}/{ads.totalCount} pieces of sponsored content!</h4>\n    </header>\n  )\n\n  return (\n    <div className={styles.profile}>\n      {isMobile && header}\n      <div className={styles.content}>\n        <div className={styles.left}>\n          <div>\n            <div className={styles.avatar} style={{ backgroundImage: `url(${user.avatarUrl})` }} />\n            <div><strong>Posts:</strong> {user.postStats.totalCount}</div>\n            <div className={styles.sendMessage}>\n              <Link to={`/messages/${user.username}`}>Message {user.username}</Link>\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.right}>\n          {isDesktop && header}\n          <div className={styles.userInfo}>\n\n          <InfoSection title=\"Gender\" info={user.gender} />\n          <InfoSection title=\"Birthday\" info={user.birthday} />\n          <InfoSection title=\"About Me\" info={user.bio} />\n          <InfoSection title=\"Occupation\" info={user.job} />\n          <InfoSection title=\"Favorite Websites\" info={user.websites} />\n          <InfoSection title=\"Favorite Movies, TV shows, and Music\" info={user.media} />\n          <InfoSection title=\"Religious Views\" info={user.religion} />\n          <InfoSection title=\"Political Views\" info={user.politics} />\n\n          </div>\n          <div className={styles.recentPosts}>\n            {user.posts.length ? (<>\n              <h2>Recent posts by {user.username}:</h2>\n              {user.posts.map(post => (\n                <div className={styles.postContainer} key={post.id}>\n                  <Post post={post} />\n                </div>\n              ))}\n            </>) : (\n              <h3>This user has not made any posts yet!</h3>\n            )}\n          </div>\n\n          <div className={styles.uuid}>user uuid: {user.id}</div>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default User\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useQuery } from 'urql'\nimport orderBy from 'lodash/orderBy'\nimport DisplayError from 'components/DisplayError'\nimport Loading from 'components/Loading'\nimport styles from './styles.module.scss'\n\nconst messagesDataQuery = `{\n  messageData: currentUser {\n    username\n    sent: messagesSentList {\n      createdAt\n      user: to {\n        username\n      }\n    }\n    received: messagesReceivedList {\n      createdAt\n      user: from {\n        username\n      }\n    }\n  }\n}`\n\ntype MessageData = {\n  createdAt: string\n  user: {\n    username: string\n  }\n}\ntype MessagesDataQuery = {\n  messageData: null | {\n    username: string\n    sent: Array<MessageData>\n    received: Array<MessageData>\n  }\n}\n\nconst collectMessages = (\n  messages: Map<string, Date>,\n  { createdAt, user: { username } }: MessageData\n) => {\n  const _createdAt = new Date(createdAt)\n  // @ts-ignore\n  if (!messages.has(username) || (messages.get(username) < _createdAt)) {\n    messages.set(username, _createdAt)\n  }\n  return messages\n}\n\nconst uniqueSortedUsers = (messageData: MessagesDataQuery['messageData']) => {\n  if (!messageData) return []\n\n  const allMessages = [...messageData.sent, ...messageData.received]\n  const messages = allMessages.reduce(collectMessages, new Map())\n\n  const values = Array.from(messages.entries())\n  return orderBy(values, [1]).reverse().map(m => m[0])\n}\n\nexport default function SidePanel() {\n  const [{ error, fetching, data }] = useQuery<MessagesDataQuery>({\n    query: messagesDataQuery\n  })\n\n  if (error) return <DisplayError error={error} />\n  if (fetching) return <Loading />\n  if (!data || !data.messageData) return null\n\n  const messageNames = uniqueSortedUsers(data.messageData)\n\n\n  return (\n    <aside className={styles.sidePanelContainer}>\n      <div className={styles.sidePanel}>\n        {messageNames.length ?\n          messageNames.map(username => (\n            <Fragment key={username}>\n              <Link to={`/messages/${username}`}>\n                <div className={styles.user}>{username}</div>\n              </Link>\n            </Fragment>\n          ))\n          : <div className={styles.emptyUsers}>You have no conversations.</div>\n        }\n      </div>\n    </aside>\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useQuery, useMutation } from 'urql'\nimport { Link, Redirect } from 'react-router-dom'\nimport orderBy from 'lodash/orderBy'\nimport DisplayError from 'components/DisplayError'\n// import Loading from 'components/Loading'\nimport ParsedText from 'components/ParsedText'\nimport styles from './styles.module.scss'\n\n\nconst requestedUserQuery = `query messagesByUsername ($username: UsernameDomain!) {\n  currentUser {\n    username\n  }\n  requestedUser: userByUsername(username: $username) {\n    sent: messagesSentList {\n      id\n      content\n      createdAt\n      to {\n        username\n      }\n      from {\n        username\n      }\n    }\n    received: messagesReceivedList {\n      id\n      content\n      createdAt\n      to {\n        id\n        username\n      }\n      from {\n        id\n        username\n      }\n    }\n  }\n}`\n\nconst createMessageMutation = `mutation createMessage ($input: CreateMessageInput!) {\n  createMessage (input: $input) {\n    message {\n      id\n      content\n      from {\n        id\n        username\n      }\n    }\n  }\n}`\n\ntype Message = {\n  id: string\n  content: string\n  createdAt: string\n  to: {\n    id: string\n    username: string\n  }\n  from: {\n    id: string\n    username: string\n  }\n}\n\ntype RequestedUserQuery = {\n  currentUser?: {\n    username: string\n  }\n  requestedUser: {\n    sent: Array<Message>\n    received: Array<Message>\n  }\n}\n\ntype CreateMessageInput = {\n  input: {\n    toUsername: string\n    content: string\n  }\n}\n\ntype CreateMessagePayload = {\n  createMessage: {\n    message: Message\n  }\n}\n\ntype Props = {\n  username?: string | null\n}\n\nfunction useInterval(callback: Function, delay: number) {\n  const savedCallback = useRef<any>(null)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default function MessagePanel ({ username }: Props) {\n  const $sentMessages = useRef<any>(null)\n  const [messageToSend, setMessageToSend] = useState<string>('')\n  const [{ error, data }, executeQuery] = useQuery<RequestedUserQuery>({\n    query: requestedUserQuery,\n    variables: { username: username || '' }\n  })\n  const [\n    response, // eslint-disable-line\n    executeCreateMessage\n  ] = useMutation<CreateMessagePayload, CreateMessageInput>(createMessageMutation)\n\n  useInterval(() => {\n    if (!document.hidden) {\n      executeQuery({ requestPolicy: 'network-only' })\n    }\n  }, 1000)\n\n  const memoized = [\n    data\n    && data.requestedUser\n    && data.requestedUser.received && data.requestedUser.sent\n    && data.requestedUser.received.length + data.requestedUser.sent.length\n  ]\n\n  useEffect(() => {\n    if ($sentMessages.current) {\n      $sentMessages.current.scrollTop = $sentMessages.current.scrollHeight\n    }\n  }, memoized) // eslint-disable-line\n\n\n  const sendMessage = (keyPressed?: string) => {\n    if (keyPressed === 'Enter' && !!messageToSend) {\n      executeCreateMessage({\n        input: {\n          content: messageToSend,\n          toUsername: username || ''\n        }\n      })\n      setMessageToSend('')\n    }\n  }\n\n  if (error) return <DisplayError error={error} />\n  // if (fetching && !stopLoadDisplay) return <Loading />\n  if (!data || !data.currentUser) return null\n\n\n  if (data.currentUser.username === username) return <Redirect to=\"/messages\" />\n\n  const collectedMessages = data.requestedUser ? collectMessages(data.requestedUser) : []\n  const sentMessages = collectedMessages.map(message => (\n    <div className={styles.message} key={message.id}>\n      <div className={styles.sender}>\n        <Link to={`/users/${message.from.username}`}>\n          <strong>\n            {message.from.username}\n          </strong>\n        </Link>\n        <time>[{message.createdAt}]</time>\n      </div>\n      <div className={styles.content}>\n        <ParsedText content={message.content} />\n      </div>\n    </div>\n  ))\n\n  return (\n    <section className={styles.messagePanel}>\n      {!data.requestedUser && `${username} is not an active FriendWorld user`}\n      {data.requestedUser && <>\n        <div ref={$sentMessages} className={styles.sentMessages}>\n          {data.requestedUser && (collectedMessages.length\n            ? sentMessages\n            : `Send ${username} a message!`\n          )}\n        </div>\n\n        <input\n          className={styles.sendBox}\n          value={messageToSend}\n          onChange={e => setMessageToSend(e.target.value)}\n          onKeyPress={e => sendMessage(e.key)}\n          placeholder=\"Press ENTER to send message\"\n        />\n      </>}\n\n    </section>\n  )\n}\n\nconst collectMessages = (requestedUser: RequestedUserQuery['requestedUser']) => orderBy([\n  ...requestedUser.received,\n  ...requestedUser.sent\n], 'createdAt')\n","import React, { useState } from 'react'\nimport { useMutation } from 'urql'\nimport cx from 'classnames'\n\nimport styles from './styles.module.scss'\n\nconst createMessageMutation = `mutation createMessage ($input: CreateMessageInput!) {\n  createMessage (input: $input) {\n    message {\n      id\n      content\n      from {\n        id\n        username\n      }\n    }\n  }\n}`\n\ntype Message = {\n  id: string\n  content: string\n  createdAt: string\n  to: {\n    id: string\n    username: string\n  }\n  from: {\n    id: string\n    username: string\n  }\n}\n\ntype CreateMessageInput = {\n  input: {\n    toUsername: string\n    content: string\n  }\n}\n\ntype CreateMessagePayload = {\n  createMessage: {\n    message: Message\n  }\n}\n\nexport default function NewMessagePanel() {\n  const [messageToSend, setMessageToSend] = useState<string>('')\n  const [newUser, setNewUser] = useState<string>('')\n  const [\n    response, // eslint-disable-line\n    executeCreateMessage\n  ] = useMutation<CreateMessagePayload, CreateMessageInput>(createMessageMutation)\n\n  const sendMessage = () => {\n    if (!!messageToSend && !!newUser) {\n      executeCreateMessage({\n        input: {\n          content: messageToSend,\n          toUsername: newUser\n        }\n      }).then(() => {\n        window.location.href = `messages/${newUser}`\n      })\n    }\n  }\n\n  const submitOnCommandEnter = (e: any) => {\n    if (e.keyCode === 13 && e.metaKey) {\n      sendMessage()\n    }\n  }\n\n  return (\n    <section className={styles.messagePanel}>\n      <div>\n        Send a new message to:\n        <div>\n          <input\n            className={styles.sendBox}\n            placeholder=\"Enter username here\"\n            value={newUser}\n            onChange={e => setNewUser(e.target.value)}\n          />\n          <textarea\n            className={cx(styles.sendBox, styles.newMessageBox)}\n            value={messageToSend}\n            onChange={e => setMessageToSend(e.target.value)}\n            placeholder=\"Enter message here\"\n            onKeyDown={submitOnCommandEnter}\n          />\n        </div>\n        <button className={styles.submitButton} onClick={sendMessage}>Send</button>\n      </div>\n    </section>\n  )\n}\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom'\n\nimport { useQuery } from 'urql'\nimport styles from './styles.module.scss'\nimport useResponsive from 'utils/useResponsive'\nimport DisplayError from 'components/DisplayError'\nimport Loading from 'components/Loading'\nimport SidePanel from './SidePanel'\nimport MessagePanel from './MessagePanel'\nimport NewMessagePanel from './NewMessagePanel'\n\n\nconst currentUserQuery = `{\n  currentUser {\n    username\n  }\n}`\n\ntype CurrentUserQuery = {\n  currentUser?: {\n    username: string\n  }\n}\n\ntype Props = {\n  username?: string | null\n}\n\ntype State = {\n  newMessage: boolean\n}\n\nconst Messages: React.SFC<Props> = ({ username }) => {\n  const { isMobile, isDesktop } = useResponsive(450)\n  const [newMessage, setNewMessage] = useState<State['newMessage']>(false)\n  const [{ data, error, fetching }] = useQuery<CurrentUserQuery>({ query: currentUserQuery })\n\n  if (error) return <DisplayError error={error} />\n  if (fetching) return <Loading />\n\n  if (data && !data.currentUser) {\n    return <Redirect to=\"/signup\" />\n  } else if (data && data.currentUser && data.currentUser.username === username) {\n    return <Redirect to=\"/messages\" />\n  }\n\n  return (\n    <div className={styles.messages}>\n      <header className={styles.header}>\n        <h1>Message Console</h1>\n        {isMobile && (newMessage || username)\n          ? <Link to=\"/messages\" onClick={() => setNewMessage(false)}>{'< All Messages'}</Link>\n          : <Link to=\"/messages\" onClick={() => setNewMessage(true)}>New Message</Link>\n        }\n      </header>\n\n      <section className={styles.messagesSection}>\n        {isMobile && (\n          <div className={styles.mobileContainer}>\n            {username && <MessagePanel username={username} />}\n            {!username && newMessage && <NewMessagePanel />}\n            {!username && !newMessage && <SidePanel />}\n          </div>\n        )}\n\n        {isDesktop && (\n          <div className={styles.desktopContainer}>\n            <SidePanel />\n\n            {username && <MessagePanel username={username} />}\n            {!username && <NewMessagePanel />}\n\n          </div>\n        )}\n      </section>\n    </div>\n  )\n}\n\nexport default Messages\n","import * as React from 'react';\nimport { useQuery } from 'urql'\nimport { Link } from 'react-router-dom'\nimport styles from './styles.module.scss'\nimport useResponsive from 'utils/useResponsive'\nimport profanityFilter from 'utils/profanityFilter'\nimport partition from 'lodash/partition'\n\nimport DisplayError from 'components/DisplayError'\nimport Loading from 'components/Loading'\nimport AdContainer, { useAds } from '../AdContainer'\n\n\nconst threadQuery = `{\n  currentUser {\n    id\n  }\n  threads: threadsList (orderBy: [LATEST_POST_TIME_DESC]) {\n    id\n    title\n    latestPostTime\n    postStats: posts {\n      totalCount\n    }\n    posts: postsList (first: 1, orderBy: [CREATED_AT_DESC]) {\n      author {\n        username\n      }\n    }\n  }\n}`\n\ntype Thread = {\n  id: number,\n  title: string,\n  latestPostTime: string,\n  posts: Array<{ author: { username: string } }>\n  postStats: {\n    totalCount: number\n  }\n}\ntype ThreadQuery = {\n  threads: Array<Thread>\n  currentUser: null | {\n    id: string\n  }\n}\n\nconst ThreadPost = ({ thread }: { thread: Thread }) => {\n  const userName = thread.posts[0] && thread.posts[0].author.username\n  const title = profanityFilter(\n    thread.title.length > 297\n      ? thread.title.substring(0, 297) + '...'\n      : thread.title\n  )\n\n  return (\n    <article key={thread.id} className={styles.threadPost}>\n      <Link className={styles.postLink} to={`/threads/${thread.id}`}>{title}</Link>\n      <div className={styles.info}><strong>LAST POST:</strong> <time>[{thread.latestPostTime}]</time></div>\n      <div className={styles.info}><strong>by: </strong>\n        <Link to={`/users/${userName}`}>{userName}</Link>\n      </div>\n      <div className={styles.info}><strong>POSTS:</strong> {thread.postStats.totalCount}</div>\n    </article>\n  )\n}\n\nconst stickiedThreads = [1]\n\nconst Forum: React.SFC<{}> = () => {\n  const { isMobile, isDesktop } = useResponsive(540)\n  const [{ fetching, error, data }] = useQuery<ThreadQuery>({ query: threadQuery })\n  const { ads, fetchingAds } = useAds(4)\n  const showMobileAd = (i: number) => {\n    const adFreq = 4\n    if (!isMobile) return false\n    if ((i + 1) % adFreq) return false\n\n    const adIx = (((i + 1) / adFreq) - 1) % ads.length\n\n    return (\n      <div className={styles.adContainer}>\n        <AdContainer ads={[ads[adIx]]} fetching={fetchingAds} />\n      </div>\n    )\n  }\n\n  const partitioned:[Array<Thread>, Array<Thread>] = data && data.threads\n    ? partition(data.threads, thread => stickiedThreads.includes(thread.id))\n    : [[], []]\n\n\n  return (\n    <section className={styles.forum}>\n      <section className={styles.left}>\n        {fetching && <Loading />}\n        {error && <DisplayError error={error} />}\n        {data && (\n          <>\n            {data.currentUser &&\n              <div className={styles.quickLinks}>\n                <strong>quick links:</strong>{' '}\n                <Link to=\"/messages\">Messages</Link>{', '}\n                <Link to=\"/profile\">Update Profile</Link>{', '}\n                <Link to=\"/stats\">Stats</Link>\n              </div>\n            }\n            <header className={styles.header}>\n              <h1>Forum</h1>\n              <Link to=\"/threads/new\" className={styles.startThread}>\n                Start A Thread!\n              </Link>\n            </header>\n            <div style={{ border: '1px dashed', padding: '3px', paddingBottom: 0, marginBottom: '10px'}}>\n              <ThreadPost thread={partitioned[0][0]} />\n            </div>\n            {partitioned[1].length && partitioned[1].map((thread, i) =>\n              <React.Fragment key={thread.id}>\n                {showMobileAd(i)}\n                <ThreadPost thread={thread} />\n              </React.Fragment>\n            )}\n          </>\n        )}\n      </section>\n      {isDesktop && <AdContainer ads={ads} fetching={fetchingAds}/>}\n    </section>\n\n  )\n}\n\nexport default Forum\n","import React from 'react';\nimport { useQuery } from 'urql'\nimport { Link } from 'react-router-dom'\n\nimport DisplayError from 'components/DisplayError'\nimport Loading from 'components/Loading'\nimport styles from './styles.module.scss'\n\n\nconst statsQuery = `{\n  userStatsList {\n    username\n    postCount\n  }\n  userAdClicksList {\n    username\n    adClicks\n  }\n}`\n\ntype StatsQuery = {\n  userStatsList: Array<{\n    username: string\n    postCount: string\n  }>\n  userAdClicksList: Array<{\n    username: string\n    adClicks: string\n  }>\n}\n\n\n\nfunction Stats() {\n  const [{ error, fetching, data }] = useQuery<StatsQuery>({ query: statsQuery })\n\n  if (error) {\n    debugger\n    return <DisplayError error={error} />\n  }\n  if (fetching) return <Loading />\n  if (!data) return null\n\n  return (\n    <section className={styles.stats}>\n      <h1>User Stats</h1>\n      <div className={styles.sectionContainer}>\n        <div className={styles.statSection}>\n          <h2>Top Posters:</h2>\n          <table>\n            <thead>\n              <tr>\n                <th></th>\n                <th>Username</th>\n                <th>Posts</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.userStatsList.map((stat, i) => (\n                <tr key={i}>\n                  <td>{i + 1}.</td>\n                  <td>\n                    <Link to={`/users/${stat.username}`}>{stat.username}</Link>\n                  </td>\n                  <td>{stat.postCount}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className={styles.statSection}>\n          <h2>Sponsored Content Engagements:</h2>\n          <table>\n            <thead>\n              <tr>\n                <th></th>\n                <th>Username</th>\n                <th>Engagements</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.userAdClicksList.map((stat, i) => (\n                <tr key={i}>\n                  <td>{i + 1}.</td>\n                  <td>\n                    <Link to={`/users/${stat.username}`}>{stat.username}</Link>\n                  </td>\n                  <td>{stat.adClicks}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Stats\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport styles from './styles.module.scss'\n\n\nfunction Onboarding() {\n  return (\n    <section className={styles.onboarding}>\n      <div className={styles.card}>\n        <h1>Welcome to Friendworld!</h1>\n        <p>Thanks for signing up! Please fill out your profile so everyone knows what you're all about!</p>\n        <Link to=\"/profile\">Click here to update your profile</Link>\n        <p>Or, hit the forums now and fill out your profile later :)</p>\n        <Link to=\"/\">Click here to go to the forum</Link>\n      </div>\n    </section>\n  )\n}\n\nexport default Onboarding\n","import React from 'react'\n\nimport { useQuery } from 'urql'\nimport Ad from 'components/Ad'\nimport DisplayError from 'components/DisplayError'\nimport Loading from 'components/Loading'\n\nconst adQuery = `{\n  stats: ads {\n    totalCount\n  }\n  ads: adsList {\n    id\n    url\n    img\n    content\n    tags\n    isGeneric\n    weight\n    targetTags\n    primaryTags\n  }\n}`\n\nfunction DevAds() {\n  const [{ data, fetching, error }] = useQuery({ query: adQuery })\n  if (process.env.NODE_ENV !== 'development') return 'ads'\n  if (error) return <DisplayError error={error} />\n  if (fetching) return <Loading />\n  if (!data) return 'no data'\n\n  return (\n    <div>\n      <h1>Total Ads: {data.stats.totalCount}</h1>\n      {data.ads.map((ad: any) =>\n        <div key={ad.id} style={{ border: '1px solid', padding: '5px', margin: '10px' }}>\n          <div style={{ maxWidth: '400px' }}>\n            <Ad {...ad} />\n          </div>\n          <pre>{JSON.stringify(ad, null, 3)}</pre>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default DevAds\n","import * as React from 'react'\nimport { withRouter, Route, Switch } from 'react-router-dom'\nimport { RouteComponentProps } from 'react-router'\n\nimport Body, { Width } from 'components/Body'\nimport Nav from 'containers/Nav'\nimport Login from 'containers/Login'\nimport Signup from 'containers/Signup'\nimport Posts from 'containers/Posts'\nimport Threads from 'containers/Threads'\nimport NewThread from 'containers/NewThread'\n\nimport Profile from 'containers/Profile'\nimport User from 'containers/User'\nimport Messages from 'containers/Messages'\nimport Forum from 'containers/Forum'\nimport Stats from 'containers/Stats'\nimport Onboarding from 'containers/Onboarding'\nimport DevAds from 'containers/DevAds'\n\n\nclass App extends React.Component<RouteComponentProps> {\n  componentDidUpdate(prevProps: RouteComponentProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <Route path=\"/\" component={Nav} />\n\n        <Body>\n          <Switch>\n            <Route exact path=\"/\" component={Forum} />\n            <Route exact path=\"/threads/new\" component={NewThread} />\n\n            <Route exact path=\"/threads/:id\" render={({ match }) =>\n              <Threads id={Number(match.params.id)} />\n            }/>\n\n            <Route exact path=\"/messages\" render={({ match }) =>\n              <Messages />\n            }/>\n\n            <Route path=\"/messages/:username\" render={({ match }) =>\n              <Messages username={match.params.username} />\n            }/>\n\n\n            <Route path=\"/posts/:id\" render={({ match }) =>\n              <Posts id={Number(match.params.id)} />\n            }/>\n\n            <Route path=\"/users/:username\" render={({ match }) =>\n              <User username={match.params.username} />\n            }/>\n\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/stats\" component={Stats} />\n            <Route exact path=\"/onboarding\" component={Onboarding} />\n            <Route exact path=\"/dev/ads\" component={(DevAds as any)} />\n\n          </Switch>\n        </Body>\n\n        <footer style={{ fontSize: '11px', padding: '10px 0'}}>\n          <Width>(c) 2019 FriendWorld.social</Width>\n        </footer>\n      </main>\n    )\n  }\n}\n\n\n\n\nexport default withRouter(App)\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider, createClient } from 'urql';\nimport App from './App';\nimport jwt from './utils/jwt'\n\njwt.setTrackingToken()\n\nconst isProd = process.env.NODE_ENV === 'production'\nconst client = createClient({\n  url: isProd\n    ? 'https://friendworld.appspot.com/graphql'\n    : 'http://localhost:5000/graphql',\n  fetchOptions: () => {\n    const jwtToken = jwt.get()\n    if (jwtToken) {\n      return {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`,\n          trackingToken: jwt.getTrackingToken() || ''\n        }\n      }\n    } else {\n      return {\n        headers: {\n          trackingToken: jwt.getTrackingToken() || ''\n        } as any\n      }\n    }\n  }\n})\n\nconst hours = new Date().getHours();\nif (hours < 5 || hours >= 22) document.body.className = 'nightmode';\n\nReactDOM.render(\n  (\n    <Provider value={client}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  ),\n  document.getElementById('root')\n );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup\":\"styles_signup__1TBgB\",\"card\":\"styles_card__2i6Va\",\"inputs\":\"styles_inputs__2-zI-\",\"submitButton\":\"styles_submitButton__1RQ0F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1c7gy\",\"inner\":\"styles_inner__2Y1v5\",\"contentInput\":\"styles_contentInput__1FYQK\",\"submitButton\":\"styles_submitButton__F4S4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"styles_stats__AKzjd\",\"statSection\":\"styles_statSection__2sbUJ\",\"sectionContainer\":\"styles_sectionContainer__2Iauo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__kQFtS\",\"memberSince\":\"styles_memberSince__6_eN_\",\"content\":\"styles_content__2k8HI\",\"left\":\"styles_left__3RLgw\",\"right\":\"styles_right__1wvr3\",\"avatar\":\"styles_avatar__up-xt\",\"subheader\":\"styles_subheader__2yCNY\",\"postContainer\":\"styles_postContainer__8sWw_\",\"recentPosts\":\"styles_recentPosts__2pfm9\",\"inputSection\":\"styles_inputSection__3flum\",\"contentInput\":\"styles_contentInput__1yKr9\",\"submitButton\":\"styles_submitButton__qntJH\",\"profile\":\"styles_profile__CnGcI\",\"buttonContainer\":\"styles_buttonContainer__21qge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"styles_login__1bddG\",\"card\":\"styles_card__342W-\",\"submitButton\":\"styles_submitButton__3gLIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adContainer\":\"styles_adContainer__lMNuW\",\"label\":\"styles_label__2MmNX\",\"adWrapper\":\"styles_adWrapper__7ikg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3ZrW4\",\"content\":\"styles_content__mkpSL\",\"title\":\"styles_title__g_H6k\",\"links\":\"styles_links__1lT-N\",\"link\":\"styles_link__2r07p\",\"user\":\"styles_user__KXrwW\",\"circle\":\"styles_circle__3a6lQ\",\"label\":\"styles_label__3nbc0\",\"unread\":\"styles_unread__39lvg\",\"unread1\":\"styles_unread1__1t29L\",\"Unread\":\"styles_Unread__20_Xf\",\"unread2\":\"styles_unread2__1gjma\",\"unread3\":\"styles_unread3__2odvK\",\"Rotate\":\"styles_Rotate__Jr-hj\",\"unread4\":\"styles_unread4__2qCGs\",\"Breathe\":\"styles_Breathe__TeGmQ\",\"dropdownPosition\":\"styles_dropdownPosition__RvAKI\",\"dropdown\":\"styles_dropdown__3tTva\",\"alert\":\"styles_alert__2nkwt\",\"alertDropdown\":\"styles_alertDropdown__28W3J\",\"noAlerts\":\"styles_noAlerts__aWfQ5\",\"userDropdown\":\"styles_userDropdown__3RMMv\",\"switchAccounts\":\"styles_switchAccounts__3Okr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"width\":\"styles_width__2uPjX\",\"body\":\"styles_body__3rj8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"styles_back__3PY0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ad\":\"styles_ad__tC5Qg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onboarding\":\"styles_onboarding__3XU1K\",\"card\":\"styles_card__PWU0O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__hU_hQ\",\"messagesSection\":\"styles_messagesSection__2TjQW\",\"mobileContainer\":\"styles_mobileContainer__2EvvN\",\"desktopContainer\":\"styles_desktopContainer__hT0b1\",\"messagePanel\":\"styles_messagePanel__3ea8x\",\"sentMessages\":\"styles_sentMessages__-5hBn\",\"newMessageBox\":\"styles_newMessageBox__151Oc\",\"sendBox\":\"styles_sendBox__2qRGc\",\"submitButton\":\"styles_submitButton__3lvS8\",\"message\":\"styles_message__Ok6NK\",\"sender\":\"styles_sender__2ZGF9\",\"sidePanelContainer\":\"styles_sidePanelContainer__3Z_GC\",\"emptyUsers\":\"styles_emptyUsers__2F5wl\",\"sidePanel\":\"styles_sidePanel__2cb8A\",\"user\":\"styles_user__3s6J6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"x\":\"styles_x__2XNkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__2wl0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"styles_error__30xW5\"};"],"sourceRoot":""}